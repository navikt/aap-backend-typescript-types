/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/oppdater-oppgaver": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.hendelse.BehandlingFlytStoppetHendelse"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/oppdater-postmottak-oppgaver": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["no.nav.aap.postmottak.kontrakt.hendelse.DokumentflytStoppetHendelse"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/neste-oppgave": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["no.nav.aap.oppgave.plukk.FinnNesteOppgaveDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.oppgave.plukk.NesteOppgaveDto"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/plukk-oppgave": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["no.nav.aap.oppgave.plukk.PlukkOppgaveDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.oppgave.OppgaveDto"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/avreserver-oppgave": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["no.nav.aap.oppgave.AvklaringsbehovReferanseDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.oppgave.OppgaveId"][];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/avreserver-oppgaver": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["no.nav.aap.oppgave.AvreserverOppgaveDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.oppgave.OppgaveId"][];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/flytt-oppgave": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["no.nav.aap.oppgave.FlyttOppgaveDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.oppgave.OppgaveId"][];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/mottatt-dokumenter-lest": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["no.nav.aap.oppgave.DokumenterLestDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/hent-oppgave": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["no.nav.aap.oppgave.AvklaringsbehovReferanseDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.oppgave.OppgaveDto"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/oppgaveliste": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["no.nav.aap.oppgave.liste.OppgavelisteRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.oppgave.liste.OppgavelisteRespons"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/oppgavesok": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["no.nav.aap.oppgave.filter.TransientFilterDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.oppgave.OppgaveDto"][];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/mine-oppgaver": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    /** @description Vis kun på vent-oppgaver. */
                    kunPaaVent?: boolean;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.oppgave.liste.OppgavelisteRespons"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sok": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["no.nav.aap.oppgave.S\u00F8kDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.oppgave.S\u00F8kResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{referanse}/ny-markering": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description referanse */
                    referanse: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["no.nav.aap.oppgave.markering.MarkeringDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.behandling.BehandlingReferanse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{referanse}/hent-markeringer": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description referanse */
                    referanse: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.oppgave.markering.MarkeringDto"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{referanse}/fjern-markering": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description referanse */
                    referanse: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["no.nav.aap.oppgave.markering.MarkeringDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.behandling.BehandlingReferanse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/filter": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    /** @description Enhetsfilter */
                    enheter?: string[];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.oppgave.filter.FilterDto"][];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["no.nav.aap.oppgave.filter.FilterDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.oppgave.filter.FilterDto"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/filter/{filterId}/slett": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["no.nav.aap.oppgave.filter.FilterId"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/produksjonsstyring/antall-oppgaver": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["no.nav.aap.oppgave.produksjonsstyring.AntallOppgaverDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            [key: string]: number;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/enheter": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.oppgave.enhet.EnhetDto"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/drift/api/jobb/feilende": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.motor.api.JobbInfoDto"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/drift/api/jobb/planlagte-jobber": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.motor.api.JobbInfoDto"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/drift/api/jobb/{jobbId}/kjor": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description ID */
                    jobbId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/drift/api/jobb/rekjor/{jobbId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description ID */
                    jobbId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/drift/api/jobb/avbryt/{jobbId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description ID */
                    jobbId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/drift/api/jobb/rekjorAlleFeilede": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/drift/api/jobb/sisteKj\u00F8rte": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.motor.api.JobbInfoDto"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        "no.nav.aap.behandlingsflyt.kontrakt.avklaringsbehov.Definisjon": {
            /** @enum {string} */
            kode: NoNavAapBehandlingsflytKontraktAvklaringsbehovDefinisjonKode;
            kreverToTrinn: boolean;
            kvalitetssikres: boolean;
            "l\u00F8sesAv": NoNavAapBehandlingsflytKontraktAvklaringsbehovDefinisjonLSesAv[];
            /** @enum {string} */
            "l\u00F8sesISteg": NoNavAapBehandlingsflytKontraktAvklaringsbehovDefinisjonLSesISteg;
            /** @enum {string} */
            type: NoNavAapBehandlingsflytKontraktAvklaringsbehovDefinisjonType;
            name: string;
        };
        "no.nav.aap.behandlingsflyt.kontrakt.behandling.BehandlingReferanse": {
            /** Format: uuid */
            referanse: string;
        };
        "no.nav.aap.behandlingsflyt.kontrakt.hendelse.AvklaringsbehovHendelseDto": {
            avklaringsbehovDefinisjon: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.avklaringsbehov.Definisjon"];
            endringer: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.hendelse.EndringDTO"][];
            /** @enum {string} */
            status: NoNavAapBehandlingsflytKontraktHendelseAvklaringsbehovHendelseDtoStatus;
            /** @enum {string|null} */
            typeBrev?: NoNavAapBehandlingsflytKontraktHendelseAvklaringsbehovHendelseDtoTypeBrev;
        };
        "no.nav.aap.behandlingsflyt.kontrakt.hendelse.AvvistLegeerkl\u00E6ringId": {
            asString: string;
            /** Format: uuid */
            value: string;
        };
        "no.nav.aap.behandlingsflyt.kontrakt.hendelse.BehandlingFlytStoppetHendelse": {
            /** @enum {string|null} */
            aktivtSteg?: NoNavAapBehandlingsflytKontraktHendelseBehandlingFlytStoppetHendelseAktivtSteg;
            avklaringsbehov: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.hendelse.AvklaringsbehovHendelseDto"][];
            /** @enum {string} */
            behandlingType: NoNavAapBehandlingsflytKontraktHendelseBehandlingFlytStoppetHendelseBehandlingType;
            "erP\u00E5Vent": boolean;
            /**
             * Format: date-time
             * @example 2025-04-01T12:30:00
             */
            hendelsesTidspunkt: string;
            mottattDokumenter: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.hendelse.MottattDokumentDto"][];
            /**
             * Format: date-time
             * @example 2025-04-01T12:30:00
             */
            opprettetTidspunkt: string;
            personIdent: string;
            referanse: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.behandling.BehandlingReferanse"];
            "relevanteIdenterP\u00E5Behandling"?: string[] | null;
            reserverTil?: string | null;
            saksnummer: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.sak.Saksnummer"];
            /** @enum {string} */
            status: NoNavAapBehandlingsflytKontraktHendelseBehandlingFlytStoppetHendelseStatus;
            versjon: string;
            vurderingsbehov: string[];
            "\u00E5rsakTilOpprettelse": string;
            "\u00E5rsakerTilBehandling": string[];
        };
        "no.nav.aap.behandlingsflyt.kontrakt.hendelse.EndringDTO": {
            begrunnelse?: string | null;
            endretAv: string;
            /**
             * Format: date
             * @example 2025-04-01
             */
            frist?: string | null;
            /** @enum {string} */
            status: NoNavAapBehandlingsflytKontraktHendelseEndringDTOStatus;
            /**
             * Format: date-time
             * @example 2025-04-01T12:30:00
             */
            tidsstempel: string;
            "\u00E5rsakTilRetur": components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.hendelse.\u00C5rsakTilRetur"][];
            /** @enum {string|null} */
            "\u00E5rsakTilSattP\u00E5Vent"?: NoNavAapBehandlingsflytKontraktHendelseEndringDTORsakTilSattPVent;
        };
        "no.nav.aap.behandlingsflyt.kontrakt.hendelse.InnsendingId": {
            asString: string;
            /** Format: uuid */
            value: string;
        };
        "no.nav.aap.behandlingsflyt.kontrakt.hendelse.InnsendingReferanse": {
            "asAvvistLegeerkl\u00E6ringId": components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.hendelse.AvvistLegeerkl\u00E6ringId"];
            asBehandlingReferanse: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.behandling.BehandlingReferanse"];
            asInnsendingId: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.hendelse.InnsendingId"];
            asJournalpostId: components["schemas"]["no.nav.aap.verdityper.dokument.JournalpostId"];
            asKabalHendelseId: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.hendelse.KabalHendelseId"];
            /** @enum {string} */
            type: NoNavAapBehandlingsflytKontraktHendelseInnsendingReferanseType;
            verdi: string;
        };
        "no.nav.aap.behandlingsflyt.kontrakt.hendelse.KabalHendelseId": {
            asString: string;
            /** Format: uuid */
            value: string;
        };
        "no.nav.aap.behandlingsflyt.kontrakt.hendelse.MottattDokumentDto": {
            referanse: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.hendelse.InnsendingReferanse"];
            /** @enum {string} */
            type: NoNavAapBehandlingsflytKontraktHendelseMottattDokumentDtoType;
        };
        "no.nav.aap.behandlingsflyt.kontrakt.hendelse.\u00C5rsakTilRetur": {
            /** @enum {string} */
            "\u00E5rsak": NoNavAapBehandlingsflytKontraktHendelseRsakTilReturRsak;
        };
        "no.nav.aap.behandlingsflyt.kontrakt.sak.Saksnummer": Record<string, never>;
        "no.nav.aap.motor.api.JobbInfoDto": {
            /** Format: int32 */
            "antallFeilendeFors\u00F8k": number;
            beskrivelse: string;
            feilmelding?: string | null;
            /** Format: int64 */
            id: number;
            /** @description Key type: kotlin.String */
            metadata: {
                [key: string]: string;
            };
            navn: string;
            /**
             * Format: date-time
             * @example 2025-04-01T12:30:00
             */
            opprettetTidspunkt?: string | null;
            /**
             * Format: date-time
             * @example 2025-04-01T12:30:00
             */
            "planlagtKj\u00F8retidspunkt": string;
            /** @enum {string} */
            status: NoNavAapMotorApiJobbInfoDtoStatus;
            type: string;
        };
        "no.nav.aap.oppgave.AvklaringsbehovReferanseDto": {
            avklaringsbehovKode: string;
            /** Format: int64 */
            journalpostId?: number | null;
            /** Format: uuid */
            referanse?: string | null;
            saksnummer?: string | null;
        };
        "no.nav.aap.oppgave.AvreserverOppgaveDto": {
            oppgaver: number[];
        };
        "no.nav.aap.oppgave.DokumenterLestDto": {
            /** Format: uuid */
            behandlingRef: string;
        };
        "no.nav.aap.oppgave.FlyttOppgaveDto": {
            avklaringsbehovReferanse: components["schemas"]["no.nav.aap.oppgave.AvklaringsbehovReferanseDto"];
            flyttTilIdent: string;
        };
        "no.nav.aap.oppgave.OppgaveDto": {
            avklaringsbehovKode: string;
            /**
             * Format: date-time
             * @example 2025-04-01T12:30:00
             */
            behandlingOpprettet: string;
            /** Format: uuid */
            behandlingRef?: string | null;
            /** @enum {string} */
            behandlingstype: NoNavAapOppgaveOppgaveDtoBehandlingstype;
            endretAv?: string | null;
            /**
             * Format: date-time
             * @example 2025-04-01T12:30:00
             */
            endretTidspunkt?: string | null;
            enhet: string;
            harFortroligAdresse?: boolean | null;
            harUlesteDokumenter?: boolean | null;
            /** Format: int64 */
            id?: number | null;
            /** Format: int64 */
            journalpostId?: number | null;
            markeringer: components["schemas"]["no.nav.aap.oppgave.markering.MarkeringDto"][];
            "oppf\u00F8lgingsenhet"?: string | null;
            opprettetAv: string;
            /**
             * Format: date-time
             * @example 2025-04-01T12:30:00
             */
            opprettetTidspunkt: string;
            personIdent?: string | null;
            personNavn?: string | null;
            /**
             * Format: date
             * @example 2025-04-01
             */
            "p\u00E5VentTil"?: string | null;
            "p\u00E5Vent\u00C5rsak"?: string | null;
            reservertAv?: string | null;
            /**
             * Format: date-time
             * @example 2025-04-01T12:30:00
             */
            reservertTidspunkt?: string | null;
            returInformasjon?: components["schemas"]["no.nav.aap.oppgave.ReturInformasjon"];
            /** @enum {string|null} */
            returStatus?: NoNavAapOppgaveOppgaveDtoReturStatus;
            saksnummer?: string | null;
            /** @enum {string} */
            status: NoNavAapOppgaveOppgaveDtoStatus;
            veilederArbeid?: string | null;
            veilederSykdom?: string | null;
            venteBegrunnelse?: string | null;
            /** Format: int64 */
            versjon: number;
            vurderingsbehov: string[];
            "\u00E5rsakTilOpprettelse"?: string | null;
            "\u00E5rsakerTilBehandling": string[];
        };
        "no.nav.aap.oppgave.OppgaveId": {
            /** Format: int64 */
            id: number;
            /** Format: int64 */
            versjon: number;
        };
        "no.nav.aap.oppgave.ReturInformasjon": {
            begrunnelse: string;
            endretAv: string;
            /** @enum {string} */
            status: NoNavAapOppgaveReturInformasjonStatus;
            "\u00E5rsaker": NoNavAapOppgaveReturInformasjonRsaker[];
        };
        "no.nav.aap.oppgave.S\u00F8kDto": {
            "s\u00F8ketekst": string;
        };
        "no.nav.aap.oppgave.S\u00F8kResponse": {
            harAdressebeskyttelse: boolean;
            harTilgang: boolean;
            oppgaver: components["schemas"]["no.nav.aap.oppgave.OppgaveDto"][];
        };
        "no.nav.aap.oppgave.enhet.EnhetDto": {
            enhetNr: string;
            navn: string;
        };
        "no.nav.aap.oppgave.filter.FilterDto": {
            avklaringsbehovKoder: string[];
            behandlingstyper: NoNavAapOppgaveFilterFilterDtoBehandlingstyper[];
            beskrivelse: string;
            endretAv?: string | null;
            /**
             * Format: date-time
             * @example 2025-04-01T12:30:00
             */
            endretTidspunkt?: string | null;
            enheter: string[];
            /** Format: int64 */
            id?: number | null;
            navn: string;
            opprettetAv: string;
            /**
             * Format: date-time
             * @example 2025-04-01T12:30:00
             */
            opprettetTidspunkt: string;
            veileder?: string | null;
        };
        "no.nav.aap.oppgave.filter.FilterId": {
            /** Format: int64 */
            filterId: number;
        };
        "no.nav.aap.oppgave.filter.TransientFilterDto": {
            avklaringsbehovKoder: string[];
            behandlingstyper: NoNavAapOppgaveFilterTransientFilterDtoBehandlingstyper[];
            enheter: string[];
            veileder?: string | null;
        };
        "no.nav.aap.oppgave.liste.OppgavelisteRequest": {
            enheter: string[];
            /** Format: int64 */
            filterId: number;
            kunLedigeOppgaver?: boolean | null;
            paging: components["schemas"]["no.nav.aap.oppgave.liste.Paging"];
            utvidetFilter?: components["schemas"]["no.nav.aap.oppgave.liste.UtvidetOppgavelisteFilter"];
            veileder: boolean;
        };
        "no.nav.aap.oppgave.liste.OppgavelisteRespons": {
            /** Format: int32 */
            antallGjenstaaende?: number | null;
            /** Format: int32 */
            antallTotalt: number;
            oppgaver: components["schemas"]["no.nav.aap.oppgave.OppgaveDto"][];
        };
        "no.nav.aap.oppgave.liste.Paging": {
            /** Format: int32 */
            antallPerSide: number;
            /** Format: int32 */
            side: number;
        };
        "no.nav.aap.oppgave.liste.UtvidetOppgavelisteFilter": {
            avklaringsbehovKoder: string[];
            behandlingstyper: NoNavAapOppgaveListeUtvidetOppgavelisteFilterBehandlingstyper[];
            /**
             * Format: date
             * @example 2025-04-01
             */
            fom?: string | null;
            "p\u00E5Vent"?: boolean | null;
            returStatuser: NoNavAapOppgaveListeUtvidetOppgavelisteFilterReturStatuser[];
            /**
             * Format: date
             * @example 2025-04-01
             */
            tom?: string | null;
            "\u00E5rsaker": string[];
        };
        "no.nav.aap.oppgave.markering.MarkeringDto": {
            begrunnelse: string;
            /** @enum {string} */
            markeringType: NoNavAapOppgaveMarkeringMarkeringDtoMarkeringType;
            opprettetAv?: string | null;
        };
        "no.nav.aap.oppgave.plukk.FinnNesteOppgaveDto": {
            enheter: string[];
            /** Format: int64 */
            filterId: number;
        };
        "no.nav.aap.oppgave.plukk.NesteOppgaveDto": {
            avklaringsbehovReferanse: components["schemas"]["no.nav.aap.oppgave.AvklaringsbehovReferanseDto"];
            /** Format: int64 */
            oppgaveId: number;
            /** Format: int64 */
            oppgaveVersjon: number;
        };
        "no.nav.aap.oppgave.plukk.PlukkOppgaveDto": {
            /** Format: int64 */
            oppgaveId: number;
            /** Format: int64 */
            versjon: number;
        };
        "no.nav.aap.oppgave.produksjonsstyring.AntallOppgaverDto": {
            /** @enum {string|null} */
            behandlingstype?: NoNavAapOppgaveProduksjonsstyringAntallOppgaverDtoBehandlingstype;
        };
        "no.nav.aap.postmottak.kontrakt.avklaringsbehov.Definisjon": {
            /** @enum {string} */
            kode: NoNavAapPostmottakKontraktAvklaringsbehovDefinisjonKode;
            kreverToTrinn: boolean;
            "l\u00F8sesAv": NoNavAapPostmottakKontraktAvklaringsbehovDefinisjonLSesAv[];
            /** @enum {string} */
            "l\u00F8sesISteg": NoNavAapPostmottakKontraktAvklaringsbehovDefinisjonLSesISteg;
            /** @enum {string} */
            type: NoNavAapPostmottakKontraktAvklaringsbehovDefinisjonType;
            name: string;
        };
        "no.nav.aap.postmottak.kontrakt.hendelse.AvklaringsbehovHendelseDto": {
            avklaringsbehovDefinisjon: components["schemas"]["no.nav.aap.postmottak.kontrakt.avklaringsbehov.Definisjon"];
            endringer: components["schemas"]["no.nav.aap.postmottak.kontrakt.hendelse.EndringDTO"][];
            /** @enum {string} */
            status: NoNavAapPostmottakKontraktHendelseAvklaringsbehovHendelseDtoStatus;
        };
        "no.nav.aap.postmottak.kontrakt.hendelse.DokumentflytStoppetHendelse": {
            avklaringsbehov: components["schemas"]["no.nav.aap.postmottak.kontrakt.hendelse.AvklaringsbehovHendelseDto"][];
            /** @enum {string} */
            behandlingType: NoNavAapPostmottakKontraktHendelseDokumentflytStoppetHendelseBehandlingType;
            /**
             * Format: date-time
             * @example 2025-04-01T12:30:00
             */
            hendelsesTidspunkt: string;
            ident: string;
            journalpostId: components["schemas"]["no.nav.aap.postmottak.kontrakt.journalpost.JournalpostId"];
            /**
             * Format: date-time
             * @example 2025-04-01T12:30:00
             */
            opprettetTidspunkt: string;
            /** Format: uuid */
            referanse: string;
            saksnummer?: string | null;
            /** @enum {string} */
            status: NoNavAapPostmottakKontraktHendelseDokumentflytStoppetHendelseStatus;
        };
        "no.nav.aap.postmottak.kontrakt.hendelse.EndringDTO": {
            endretAv: string;
            /**
             * Format: date
             * @example 2025-04-01
             */
            frist?: string | null;
            /** @enum {string} */
            status: NoNavAapPostmottakKontraktHendelseEndringDTOStatus;
            /**
             * Format: date-time
             * @example 2025-04-01T12:30:00
             */
            tidsstempel: string;
            /** @enum {string|null} */
            "\u00E5rsakTilSattP\u00E5Vent"?: NoNavAapPostmottakKontraktHendelseEndringDTORsakTilSattPVent;
        };
        "no.nav.aap.postmottak.kontrakt.journalpost.JournalpostId": {
            /** Format: int64 */
            referanse: number;
        };
        "no.nav.aap.verdityper.dokument.JournalpostId": {
            identifikator: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export enum NoNavAapBehandlingsflytKontraktAvklaringsbehovDefinisjonKode {
    Value9001 = "9001",
    Value9002 = "9002",
    Value9003 = "9003",
    Value9004 = "9004",
    Value5029 = "5029",
    Value5001 = "5001",
    Value5002 = "5002",
    Value5003 = "5003",
    Value5004 = "5004",
    Value5005 = "5005",
    Value5006 = "5006",
    Value5007 = "5007",
    Value5008 = "5008",
    Value5009 = "5009",
    Value5010 = "5010",
    Value5011 = "5011",
    Value5012 = "5012",
    Value5013 = "5013",
    Value5014 = "5014",
    Value5015 = "5015",
    Value5016 = "5016",
    Value5017 = "5017",
    Value5018 = "5018",
    Value5020 = "5020",
    Value5024 = "5024",
    Value5096 = "5096",
    Value5097 = "5097",
    Value5098 = "5098",
    Value5099 = "5099",
    Value5021 = "5021",
    Value5022 = "5022",
    Value5023 = "5023",
    Value5025 = "5025",
    Value5027 = "5027",
    Value5030 = "5030",
    Value5028 = "5028",
    Value5019 = "5019",
    Value5050 = "5050",
    Value5051 = "5051",
    Value5052 = "5052",
    Value5053 = "5053",
    Value5026 = "5026",
    Value5999 = "5999",
    Value5056 = "5056",
    Value6000 = "6000",
    Value6001 = "6001",
    Value6002 = "6002",
    Value6003 = "6003",
    Value6004 = "6004",
    Value6005 = "6005",
    Value6006 = "6006",
    Value6007 = "6007",
    Value6008 = "6008",
    Value6009 = "6009",
    Value6010 = "6010",
    Value7001 = "7001",
    Value8001 = "8001",
    Value8002 = "8002",
    Value8003 = "8003"
}
export enum NoNavAapBehandlingsflytKontraktAvklaringsbehovDefinisjonLSesAv {
    SAKSBEHANDLER_OPPFOLGING = "SAKSBEHANDLER_OPPFOLGING",
    SAKSBEHANDLER_NASJONAL = "SAKSBEHANDLER_NASJONAL",
    KVALITETSSIKRER = "KVALITETSSIKRER",
    BESLUTTER = "BESLUTTER",
    LES = "LES",
    PRODUKSJONSSTYRING = "PRODUKSJONSSTYRING",
    DRIFT = "DRIFT"
}
export enum NoNavAapBehandlingsflytKontraktAvklaringsbehovDefinisjonLSesISteg {
    START_BEHANDLING = "START_BEHANDLING",
    SEND_FORVALTNINGSMELDING = "SEND_FORVALTNINGSMELDING",
    VURDER_RETTIGHETSPERIODE = "VURDER_RETTIGHETSPERIODE",
    S_KNAD = "S\u00D8KNAD",
    VURDER_ALDER = "VURDER_ALDER",
    VURDER_LOVVALG = "VURDER_LOVVALG",
    VURDER_MEDLEMSKAP = "VURDER_MEDLEMSKAP",
    FASTSETT_MELDEPERIODER = "FASTSETT_MELDEPERIODER",
    AVKLAR_STUDENT = "AVKLAR_STUDENT",
    VURDER_BISTANDSBEHOV = "VURDER_BISTANDSBEHOV",
    VURDER_SYKEPENGEERSTATNING = "VURDER_SYKEPENGEERSTATNING",
    FASTSETT_SYKDOMSVILK_RET = "FASTSETT_SYKDOMSVILK\u00C5RET",
    VURDER_YRKESSKADE = "VURDER_YRKESSKADE",
    FRITAK_MELDEPLIKT = "FRITAK_MELDEPLIKT",
    SYKDOMSVURDERING_BREV = "SYKDOMSVURDERING_BREV",
    KVALITETSSIKRING = "KVALITETSSIKRING",
    BARNETILLEGG = "BARNETILLEGG",
    AVKLAR_SYKDOM = "AVKLAR_SYKDOM",
    REFUSJON_KRAV = "REFUSJON_KRAV",
    FASTSETT_ARBEIDSEVNE = "FASTSETT_ARBEIDSEVNE",
    FASTSETT_BEREGNINGSTIDSPUNKT = "FASTSETT_BEREGNINGSTIDSPUNKT",
    FASTSETT_GRUNNLAG = "FASTSETT_GRUNNLAG",
    VIS_GRUNNLAG = "VIS_GRUNNLAG",
    MANGLENDE_LIGNING = "MANGLENDE_LIGNING",
    SAMORDNING_UF_RE = "SAMORDNING_UF\u00D8RE",
    SAMORDNING_GRADERING = "SAMORDNING_GRADERING",
    SAMORDNING_AVSLAG = "SAMORDNING_AVSLAG",
    SAMORDNING_ANDRE_STATLIGE_YTELSER = "SAMORDNING_ANDRE_STATLIGE_YTELSER",
    SAMORDNING_ARBEIDSGIVER = "SAMORDNING_ARBEIDSGIVER",
    SAMORDNING_TJENESTEPENSJON_REFUSJONSKRAV = "SAMORDNING_TJENESTEPENSJON_REFUSJONSKRAV",
    IKKE_OPPFYLT_MELDEPLIKT = "IKKE_OPPFYLT_MELDEPLIKT",
    FASTSETT_UTTAK = "FASTSETT_UTTAK",
    EFFEKTUER_11_7 = "EFFEKTUER_11_7",
    DU_ER_ET_ANNET_STED = "DU_ER_ET_ANNET_STED",
    BEREGN_TILKJENT_YTELSE = "BEREGN_TILKJENT_YTELSE",
    SIMULERING = "SIMULERING",
    FORESL__VEDTAK = "FORESL\u00C5_VEDTAK",
    FATTE_VEDTAK = "FATTE_VEDTAK",
    IVERKSETT_VEDTAK = "IVERKSETT_VEDTAK",
    OPPRETT_REVURDERING = "OPPRETT_REVURDERING",
    BREV = "BREV",
    P_KLAGET_BEHANDLING = "P\u00C5KLAGET_BEHANDLING",
    FULLMEKTIG = "FULLMEKTIG",
    FORMKRAV = "FORMKRAV",
    BEHANDLENDE_ENHET = "BEHANDLENDE_ENHET",
    KLAGEBEHANDLING_KONTOR = "KLAGEBEHANDLING_KONTOR",
    KLAGEBEHANDLING_NAY = "KLAGEBEHANDLING_NAY",
    KLAGEBEHANDLING_OPPSUMMERING = "KLAGEBEHANDLING_OPPSUMMERING",
    OMGJ_RING = "OMGJ\u00D8RING",
    TREKK_KLAGE = "TREKK_KLAGE",
    OPPRETTHOLDELSE = "OPPRETTHOLDELSE",
    SVAR_FRA_ANDREINSTANS = "SVAR_FRA_ANDREINSTANS",
    IVERKSETT_KONSEKVENS = "IVERKSETT_KONSEKVENS",
    START_OPPF_LGINGSBEHANDLING = "START_OPPF\u00D8LGINGSBEHANDLING",
    AVKLAR_OPPF_LGING = "AVKLAR_OPPF\u00D8LGING",
    UDEFINERT = "UDEFINERT"
}
export enum NoNavAapBehandlingsflytKontraktAvklaringsbehovDefinisjonType {
    MANUELT_P_KREVD = "MANUELT_P\u00C5KREVD",
    MANUELT_FRIVILLIG = "MANUELT_FRIVILLIG",
    BREV = "BREV",
    BREV_VENTEPUNKT = "BREV_VENTEPUNKT",
    VENTEPUNKT = "VENTEPUNKT",
    OVERSTYR = "OVERSTYR"
}
export enum NoNavAapBehandlingsflytKontraktHendelseAvklaringsbehovHendelseDtoStatus {
    OPPRETTET = "OPPRETTET",
    AVSLUTTET = "AVSLUTTET",
    TOTRINNS_VURDERT = "TOTRINNS_VURDERT",
    SENDT_TILBAKE_FRA_BESLUTTER = "SENDT_TILBAKE_FRA_BESLUTTER",
    KVALITETSSIKRET = "KVALITETSSIKRET",
    SENDT_TILBAKE_FRA_KVALITETSSIKRER = "SENDT_TILBAKE_FRA_KVALITETSSIKRER",
    AVBRUTT = "AVBRUTT"
}
export enum NoNavAapBehandlingsflytKontraktHendelseAvklaringsbehovHendelseDtoTypeBrev {
    VEDTAK_AVSLAG = "VEDTAK_AVSLAG",
    VEDTAK_INNVILGELSE = "VEDTAK_INNVILGELSE",
    VEDTAK_ENDRING = "VEDTAK_ENDRING",
    VARSEL_OM_BESTILLING = "VARSEL_OM_BESTILLING",
    FORH_NDSVARSEL_BRUDD_AKTIVITETSPLIKT = "FORH\u00C5NDSVARSEL_BRUDD_AKTIVITETSPLIKT",
    KLAGE_AVVIST = "KLAGE_AVVIST",
    KLAGE_OPPRETTHOLDELSE = "KLAGE_OPPRETTHOLDELSE",
    KLAGE_TRUKKET = "KLAGE_TRUKKET",
    FORH_NDSVARSEL_KLAGE_FORMKRAV = "FORH\u00C5NDSVARSEL_KLAGE_FORMKRAV",
    FORVALTNINGSMELDING = "FORVALTNINGSMELDING"
}
export enum NoNavAapBehandlingsflytKontraktHendelseBehandlingFlytStoppetHendelseAktivtSteg {
    START_BEHANDLING = "START_BEHANDLING",
    SEND_FORVALTNINGSMELDING = "SEND_FORVALTNINGSMELDING",
    VURDER_RETTIGHETSPERIODE = "VURDER_RETTIGHETSPERIODE",
    S_KNAD = "S\u00D8KNAD",
    VURDER_ALDER = "VURDER_ALDER",
    VURDER_LOVVALG = "VURDER_LOVVALG",
    VURDER_MEDLEMSKAP = "VURDER_MEDLEMSKAP",
    FASTSETT_MELDEPERIODER = "FASTSETT_MELDEPERIODER",
    AVKLAR_STUDENT = "AVKLAR_STUDENT",
    VURDER_BISTANDSBEHOV = "VURDER_BISTANDSBEHOV",
    VURDER_SYKEPENGEERSTATNING = "VURDER_SYKEPENGEERSTATNING",
    FASTSETT_SYKDOMSVILK_RET = "FASTSETT_SYKDOMSVILK\u00C5RET",
    VURDER_YRKESSKADE = "VURDER_YRKESSKADE",
    FRITAK_MELDEPLIKT = "FRITAK_MELDEPLIKT",
    SYKDOMSVURDERING_BREV = "SYKDOMSVURDERING_BREV",
    KVALITETSSIKRING = "KVALITETSSIKRING",
    BARNETILLEGG = "BARNETILLEGG",
    AVKLAR_SYKDOM = "AVKLAR_SYKDOM",
    REFUSJON_KRAV = "REFUSJON_KRAV",
    FASTSETT_ARBEIDSEVNE = "FASTSETT_ARBEIDSEVNE",
    FASTSETT_BEREGNINGSTIDSPUNKT = "FASTSETT_BEREGNINGSTIDSPUNKT",
    FASTSETT_GRUNNLAG = "FASTSETT_GRUNNLAG",
    VIS_GRUNNLAG = "VIS_GRUNNLAG",
    MANGLENDE_LIGNING = "MANGLENDE_LIGNING",
    SAMORDNING_UF_RE = "SAMORDNING_UF\u00D8RE",
    SAMORDNING_GRADERING = "SAMORDNING_GRADERING",
    SAMORDNING_AVSLAG = "SAMORDNING_AVSLAG",
    SAMORDNING_ANDRE_STATLIGE_YTELSER = "SAMORDNING_ANDRE_STATLIGE_YTELSER",
    SAMORDNING_ARBEIDSGIVER = "SAMORDNING_ARBEIDSGIVER",
    SAMORDNING_TJENESTEPENSJON_REFUSJONSKRAV = "SAMORDNING_TJENESTEPENSJON_REFUSJONSKRAV",
    IKKE_OPPFYLT_MELDEPLIKT = "IKKE_OPPFYLT_MELDEPLIKT",
    FASTSETT_UTTAK = "FASTSETT_UTTAK",
    EFFEKTUER_11_7 = "EFFEKTUER_11_7",
    DU_ER_ET_ANNET_STED = "DU_ER_ET_ANNET_STED",
    BEREGN_TILKJENT_YTELSE = "BEREGN_TILKJENT_YTELSE",
    SIMULERING = "SIMULERING",
    FORESL__VEDTAK = "FORESL\u00C5_VEDTAK",
    FATTE_VEDTAK = "FATTE_VEDTAK",
    IVERKSETT_VEDTAK = "IVERKSETT_VEDTAK",
    OPPRETT_REVURDERING = "OPPRETT_REVURDERING",
    BREV = "BREV",
    P_KLAGET_BEHANDLING = "P\u00C5KLAGET_BEHANDLING",
    FULLMEKTIG = "FULLMEKTIG",
    FORMKRAV = "FORMKRAV",
    BEHANDLENDE_ENHET = "BEHANDLENDE_ENHET",
    KLAGEBEHANDLING_KONTOR = "KLAGEBEHANDLING_KONTOR",
    KLAGEBEHANDLING_NAY = "KLAGEBEHANDLING_NAY",
    KLAGEBEHANDLING_OPPSUMMERING = "KLAGEBEHANDLING_OPPSUMMERING",
    OMGJ_RING = "OMGJ\u00D8RING",
    TREKK_KLAGE = "TREKK_KLAGE",
    OPPRETTHOLDELSE = "OPPRETTHOLDELSE",
    SVAR_FRA_ANDREINSTANS = "SVAR_FRA_ANDREINSTANS",
    IVERKSETT_KONSEKVENS = "IVERKSETT_KONSEKVENS",
    START_OPPF_LGINGSBEHANDLING = "START_OPPF\u00D8LGINGSBEHANDLING",
    AVKLAR_OPPF_LGING = "AVKLAR_OPPF\u00D8LGING",
    UDEFINERT = "UDEFINERT"
}
export enum NoNavAapBehandlingsflytKontraktHendelseBehandlingFlytStoppetHendelseBehandlingType {
    F_rstegangsbehandling = "F\u00F8rstegangsbehandling",
    Revurdering = "Revurdering",
    Tilbakekreving = "Tilbakekreving",
    Klage = "Klage",
    SvarFraAndreinstans = "SvarFraAndreinstans",
    Oppf_lgingsBehandling = "Oppf\u00F8lgingsBehandling"
}
export enum NoNavAapBehandlingsflytKontraktHendelseBehandlingFlytStoppetHendelseStatus {
    OPPRETTET = "OPPRETTET",
    UTREDES = "UTREDES",
    IVERKSETTES = "IVERKSETTES",
    AVSLUTTET = "AVSLUTTET"
}
export enum NoNavAapBehandlingsflytKontraktHendelseEndringDTOStatus {
    OPPRETTET = "OPPRETTET",
    AVSLUTTET = "AVSLUTTET",
    TOTRINNS_VURDERT = "TOTRINNS_VURDERT",
    SENDT_TILBAKE_FRA_BESLUTTER = "SENDT_TILBAKE_FRA_BESLUTTER",
    KVALITETSSIKRET = "KVALITETSSIKRET",
    SENDT_TILBAKE_FRA_KVALITETSSIKRER = "SENDT_TILBAKE_FRA_KVALITETSSIKRER",
    AVBRUTT = "AVBRUTT"
}
export enum NoNavAapBehandlingsflytKontraktHendelseEndringDTORsakTilSattPVent {
    VENTER_P__OPPLYSNINGER = "VENTER_P\u00C5_OPPLYSNINGER",
    VENTER_P__OPPLYSNINGER_FRA_UTENLANDSKE_MYNDIGHETER = "VENTER_P\u00C5_OPPLYSNINGER_FRA_UTENLANDSKE_MYNDIGHETER",
    VENTER_P__MEDISINSKE_OPPLYSNINGER = "VENTER_P\u00C5_MEDISINSKE_OPPLYSNINGER",
    VENTER_P__VURDERING_AV_ROL = "VENTER_P\u00C5_VURDERING_AV_ROL",
    VENTER_P__SVAR_FRA_BRUKER = "VENTER_P\u00C5_SVAR_FRA_BRUKER",
    VENTER_P__MASKINELL_AVKLARING = "VENTER_P\u00C5_MASKINELL_AVKLARING",
    VENTER_P__UTENLANDSK_VIDEREFORING_AVKLARING = "VENTER_P\u00C5_UTENLANDSK_VIDEREFORING_AVKLARING",
    VENTER_P__KLAGE_IMPLEMENTASJON = "VENTER_P\u00C5_KLAGE_IMPLEMENTASJON",
    VENTER_P__SVAR_P__FORH_NDSVARSEL = "VENTER_P\u00C5_SVAR_P\u00C5_FORH\u00C5NDSVARSEL",
    VENTER_P__FUNKSJONALITET = "VENTER_P\u00C5_FUNKSJONALITET"
}
export enum NoNavAapBehandlingsflytKontraktHendelseInnsendingReferanseType {
    JOURNALPOST = "JOURNALPOST",
    BRUDD_AKTIVITETSPLIKT_INNSENDING_ID = "BRUDD_AKTIVITETSPLIKT_INNSENDING_ID",
    AVVIST_LEGEERKL_RING_ID = "AVVIST_LEGEERKL\u00C6RING_ID",
    REVURDERING_ID = "REVURDERING_ID",
    BEHANDLING_REFERANSE = "BEHANDLING_REFERANSE",
    MANUELL_OPPRETTELSE = "MANUELL_OPPRETTELSE",
    KABAL_HENDELSE_ID = "KABAL_HENDELSE_ID"
}
export enum NoNavAapBehandlingsflytKontraktHendelseMottattDokumentDtoType {
    S_KNAD = "S\u00D8KNAD",
    AKTIVITETSKORT = "AKTIVITETSKORT",
    MELDEKORT = "MELDEKORT",
    LEGEERKL_RING = "LEGEERKL\u00C6RING",
    LEGEERKL_RING_AVVIST = "LEGEERKL\u00C6RING_AVVIST",
    DIALOGMELDING = "DIALOGMELDING",
    KLAGE = "KLAGE",
    ANNET_RELEVANT_DOKUMENT = "ANNET_RELEVANT_DOKUMENT",
    MANUELL_REVURDERING = "MANUELL_REVURDERING",
    OMGJ_RING_KLAGE_REVURDERING = "OMGJ\u00D8RING_KLAGE_REVURDERING",
    NY__RSAK_TIL_BEHANDLING = "NY_\u00C5RSAK_TIL_BEHANDLING",
    KABAL_HENDELSE = "KABAL_HENDELSE",
    OPPF_LGINGSOPPGAVE = "OPPF\u00D8LGINGSOPPGAVE"
}
export enum NoNavAapBehandlingsflytKontraktHendelseRsakTilReturRsak {
    MANGELFULL_BEGRUNNELSE = "MANGELFULL_BEGRUNNELSE",
    MANGLENDE_UTREDNING = "MANGLENDE_UTREDNING",
    FEIL_LOVANVENDELSE = "FEIL_LOVANVENDELSE",
    ANNET = "ANNET"
}
export enum NoNavAapMotorApiJobbInfoDtoStatus {
    KLAR = "KLAR",
    PLUKKET = "PLUKKET",
    FERDIG = "FERDIG",
    FEILET = "FEILET",
    AVBRUTT = "AVBRUTT"
}
export enum NoNavAapOppgaveOppgaveDtoBehandlingstype {
    F_RSTEGANGSBEHANDLING = "F\u00D8RSTEGANGSBEHANDLING",
    REVURDERING = "REVURDERING",
    TILBAKEKREVING = "TILBAKEKREVING",
    KLAGE = "KLAGE",
    SVAR_FRA_ANDREINSTANS = "SVAR_FRA_ANDREINSTANS",
    OPPF_LGINGSBEHANDLING = "OPPF\u00D8LGINGSBEHANDLING",
    DOKUMENT_H_NDTERING = "DOKUMENT_H\u00C5NDTERING",
    JOURNALF_RING = "JOURNALF\u00D8RING"
}
export enum NoNavAapOppgaveOppgaveDtoReturStatus {
    RETUR_FRA_BESLUTTER = "RETUR_FRA_BESLUTTER",
    RETUR_FRA_KVALITETSSIKRER = "RETUR_FRA_KVALITETSSIKRER"
}
export enum NoNavAapOppgaveOppgaveDtoStatus {
    OPPRETTET = "OPPRETTET",
    AVSLUTTET = "AVSLUTTET"
}
export enum NoNavAapOppgaveReturInformasjonStatus {
    RETUR_FRA_BESLUTTER = "RETUR_FRA_BESLUTTER",
    RETUR_FRA_KVALITETSSIKRER = "RETUR_FRA_KVALITETSSIKRER"
}
export enum NoNavAapOppgaveReturInformasjonRsaker {
    MANGELFULL_BEGRUNNELSE = "MANGELFULL_BEGRUNNELSE",
    MANGLENDE_UTREDNING = "MANGLENDE_UTREDNING",
    FEIL_LOVANVENDELSE = "FEIL_LOVANVENDELSE",
    ANNET = "ANNET"
}
export enum NoNavAapOppgaveFilterFilterDtoBehandlingstyper {
    F_RSTEGANGSBEHANDLING = "F\u00D8RSTEGANGSBEHANDLING",
    REVURDERING = "REVURDERING",
    TILBAKEKREVING = "TILBAKEKREVING",
    KLAGE = "KLAGE",
    SVAR_FRA_ANDREINSTANS = "SVAR_FRA_ANDREINSTANS",
    OPPF_LGINGSBEHANDLING = "OPPF\u00D8LGINGSBEHANDLING",
    DOKUMENT_H_NDTERING = "DOKUMENT_H\u00C5NDTERING",
    JOURNALF_RING = "JOURNALF\u00D8RING"
}
export enum NoNavAapOppgaveFilterTransientFilterDtoBehandlingstyper {
    F_RSTEGANGSBEHANDLING = "F\u00D8RSTEGANGSBEHANDLING",
    REVURDERING = "REVURDERING",
    TILBAKEKREVING = "TILBAKEKREVING",
    KLAGE = "KLAGE",
    SVAR_FRA_ANDREINSTANS = "SVAR_FRA_ANDREINSTANS",
    OPPF_LGINGSBEHANDLING = "OPPF\u00D8LGINGSBEHANDLING",
    DOKUMENT_H_NDTERING = "DOKUMENT_H\u00C5NDTERING",
    JOURNALF_RING = "JOURNALF\u00D8RING"
}
export enum NoNavAapOppgaveListeUtvidetOppgavelisteFilterBehandlingstyper {
    F_RSTEGANGSBEHANDLING = "F\u00D8RSTEGANGSBEHANDLING",
    REVURDERING = "REVURDERING",
    TILBAKEKREVING = "TILBAKEKREVING",
    KLAGE = "KLAGE",
    SVAR_FRA_ANDREINSTANS = "SVAR_FRA_ANDREINSTANS",
    OPPF_LGINGSBEHANDLING = "OPPF\u00D8LGINGSBEHANDLING",
    DOKUMENT_H_NDTERING = "DOKUMENT_H\u00C5NDTERING",
    JOURNALF_RING = "JOURNALF\u00D8RING"
}
export enum NoNavAapOppgaveListeUtvidetOppgavelisteFilterReturStatuser {
    RETUR_FRA_BESLUTTER = "RETUR_FRA_BESLUTTER",
    RETUR_FRA_KVALITETSSIKRER = "RETUR_FRA_KVALITETSSIKRER"
}
export enum NoNavAapOppgaveMarkeringMarkeringDtoMarkeringType {
    HASTER = "HASTER",
    KREVER_SPESIALKOMPETANSE = "KREVER_SPESIALKOMPETANSE"
}
export enum NoNavAapOppgaveProduksjonsstyringAntallOppgaverDtoBehandlingstype {
    F_RSTEGANGSBEHANDLING = "F\u00D8RSTEGANGSBEHANDLING",
    REVURDERING = "REVURDERING",
    TILBAKEKREVING = "TILBAKEKREVING",
    KLAGE = "KLAGE",
    SVAR_FRA_ANDREINSTANS = "SVAR_FRA_ANDREINSTANS",
    OPPF_LGINGSBEHANDLING = "OPPF\u00D8LGINGSBEHANDLING",
    DOKUMENT_H_NDTERING = "DOKUMENT_H\u00C5NDTERING",
    JOURNALF_RING = "JOURNALF\u00D8RING"
}
export enum NoNavAapPostmottakKontraktAvklaringsbehovDefinisjonKode {
    Value9001 = "9001",
    Value1337 = "1337",
    Value1338 = "1338",
    Value1339 = "1339",
    Value1340 = "1340",
    Value1341 = "1341"
}
export enum NoNavAapPostmottakKontraktAvklaringsbehovDefinisjonLSesAv {
    SAKSBEHANDLER_OPPFOLGING = "SAKSBEHANDLER_OPPFOLGING",
    SAKSBEHANDLER_NASJONAL = "SAKSBEHANDLER_NASJONAL",
    KVALITETSSIKRER = "KVALITETSSIKRER",
    BESLUTTER = "BESLUTTER",
    LES = "LES",
    PRODUKSJONSSTYRING = "PRODUKSJONSSTYRING",
    DRIFT = "DRIFT"
}
export enum NoNavAapPostmottakKontraktAvklaringsbehovDefinisjonLSesISteg {
    DIGITALISER_DOKUMENT = "DIGITALISER_DOKUMENT",
    START_BEHANDLING = "START_BEHANDLING",
    AVKLAR_TEMA = "AVKLAR_TEMA",
    SETT_FAGSAK = "SETT_FAGSAK",
    ENDELIG_JOURNALF_RING = "ENDELIG_JOURNALF\u00D8RING",
    OVERLEVER_TIL_FAGSYSTEM = "OVERLEVER_TIL_FAGSYSTEM",
    UDEFINERT = "UDEFINERT",
    AVKLAR_SAK = "AVKLAR_SAK",
    VIDERESEND = "VIDERESEND",
    IVERKSETTES = "IVERKSETTES"
}
export enum NoNavAapPostmottakKontraktAvklaringsbehovDefinisjonType {
    MANUELT_P_KREVD = "MANUELT_P\u00C5KREVD",
    MANUELT_FRIVILLIG = "MANUELT_FRIVILLIG",
    VENTEPUNKT = "VENTEPUNKT"
}
export enum NoNavAapPostmottakKontraktHendelseAvklaringsbehovHendelseDtoStatus {
    OPPRETTET = "OPPRETTET",
    AVSLUTTET = "AVSLUTTET",
    SENDT_TILBAKE_FRA_BESLUTTER = "SENDT_TILBAKE_FRA_BESLUTTER",
    SENDT_TILBAKE_FRA_KVALITETSSIKRER = "SENDT_TILBAKE_FRA_KVALITETSSIKRER",
    AVBRUTT = "AVBRUTT"
}
export enum NoNavAapPostmottakKontraktHendelseDokumentflytStoppetHendelseBehandlingType {
    DokumentH_ndtering = "DokumentH\u00E5ndtering",
    Journalf_ring = "Journalf\u00F8ring"
}
export enum NoNavAapPostmottakKontraktHendelseDokumentflytStoppetHendelseStatus {
    OPPRETTET = "OPPRETTET",
    UTREDES = "UTREDES",
    IVERKSETTES = "IVERKSETTES",
    AVSLUTTET = "AVSLUTTET"
}
export enum NoNavAapPostmottakKontraktHendelseEndringDTOStatus {
    OPPRETTET = "OPPRETTET",
    AVSLUTTET = "AVSLUTTET",
    SENDT_TILBAKE_FRA_BESLUTTER = "SENDT_TILBAKE_FRA_BESLUTTER",
    SENDT_TILBAKE_FRA_KVALITETSSIKRER = "SENDT_TILBAKE_FRA_KVALITETSSIKRER",
    AVBRUTT = "AVBRUTT"
}
export enum NoNavAapPostmottakKontraktHendelseEndringDTORsakTilSattPVent {
    VENTER_P__OPPLYSNINGER = "VENTER_P\u00C5_OPPLYSNINGER",
    VENTER_P__OPPLYSNINGER_FRA_UTENLANDSKE_MYNDIGHETER = "VENTER_P\u00C5_OPPLYSNINGER_FRA_UTENLANDSKE_MYNDIGHETER",
    VENTER_P__MEDISINSKE_OPPLYSNINGER = "VENTER_P\u00C5_MEDISINSKE_OPPLYSNINGER",
    VENTER_P__VURDERING_AV_ROL = "VENTER_P\u00C5_VURDERING_AV_ROL",
    VENTER_P__SVAR_FRA_BRUKER = "VENTER_P\u00C5_SVAR_FRA_BRUKER"
}
export type operations = Record<string, never>;
