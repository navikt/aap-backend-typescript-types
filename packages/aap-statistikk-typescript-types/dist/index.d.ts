/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
interface paths {
    "/stoppetBehandling": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.statistikk.StoppetBehandling"];
                };
            };
            responses: {
                /** @description Accepted */
                202: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/oppgave": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** OppgaveHendelse */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["no.nav.aap.oppgave.statistikk.OppgaveHendelse"];
                };
            };
            responses: {
                /** @description Accepted */
                202: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/postmottak": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** DokumentflytStoppetHendelse */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["no.nav.aap.postmottak.kontrakt.hendelse.DokumentflytStoppetHendelse"];
                };
            };
            responses: {
                /** @description Accepted */
                202: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/behandlingstid": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** For en gitt dag, hva er gjennomsnittlig alder på alle behandlinger som ble avsluttet på denne dagen. */
        get: {
            parameters: {
                query?: {
                    /** @description For hvilke behandlingstyper. Tom liste betyr alle. */
                    behandlingstyper?: PathsBehandlingstidGetParametersQueryBehandlingstyper[];
                    /** @description For hvilke enheter. Tom liste betyr alle. */
                    enheter?: string[];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.statistikk.api.`ProduksjonsstyringApiKt$hentBehandlingstidPerDag$BehandlingstidPerDagDTO`"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/behandlingstid/lukkede-siste-dager/{antallDager}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Henter alle behandlinger som er lukket i de siste n dager, og regner ut snittalderen på disse. */
        get: {
            parameters: {
                query?: {
                    /** @description For hvilke behandlingstyper. Tom liste betyr alle. */
                    behandlingstyper?: PathsBehandlingstidLukkedeSisteDagerAntallDagerGetParametersQueryBehandlingstyper[];
                    /** @description For hvilke enheter. Tom liste betyr alle. */
                    enheter?: string[];
                };
                header?: never;
                path: {
                    /** @description Antall dager å regne på */
                    antallDager: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": number;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/\u00E5pne-behandlinger-per-behandlingstype": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Antall åpne behandlinger og gjennomsnittsalder på dem per behandlingstype. */
        get: {
            parameters: {
                query?: {
                    /** @description For hvilke behandlingstyper. Tom liste betyr alle. */
                    behandlingstyper?: PathsPneBehandlingerPerBehandlingstypeGetParametersQueryBehandlingstyper[];
                    /** @description For hvilke enheter. Tom liste betyr alle. */
                    enheter?: string[];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.statistikk.api.`ProduksjonsstyringApiKt$hentBehandlingstidPerDag$Antall\u00C5pneOgTypeOgGjennomsnittsalder`"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/behandling-per-avklaringsbehov": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Antall åpne behandlinger per avklaringsbehov. */
        get: {
            parameters: {
                query?: {
                    /** @description For hvilke behandlingstyper. Tom liste betyr alle. */
                    behandlingstyper?: PathsBehandlingPerAvklaringsbehovGetParametersQueryBehandlingstyper[];
                    /** @description For hvilke enheter. Tom liste betyr alle. */
                    enheter?: string[];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.statistikk.produksjonsstyring.BehandlingPerAvklaringsbehov"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/behandling-per-steggruppe": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    /** @description For hvilke behandlingstyper. Tom liste betyr alle. */
                    behandlingstyper?: PathsBehandlingPerSteggruppeGetParametersQueryBehandlingstyper[];
                    /** @description For hvilke enheter. Tom liste betyr alle. */
                    enheter?: string[];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.statistikk.produksjonsstyring.BehandlingPerSteggruppe"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/behandlinger/fordeling-\u00E5pne-behandlinger": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returnerer en liste over fordelingen på åpne behandlinger. Bøtte nr 1 teller antall
         *     behandlinger som er enhet * bøtteStørrelse gammel . Bøtte nr antallBøtter + 1 teller
         *     antall behandlinger eldre enn bøttestørrelsen. */
        get: {
            parameters: {
                query: {
                    /** @description Hvor mange bøtter skal åpne behandlinger plasseres i? */
                    "antallB\u00F8tter"?: number;
                    /** @description Week, month, day, etc. */
                    enhet: PathsBehandlingerFordelingPneBehandlingerGetParametersQueryEnhet;
                    /** @description Hver bøtte er enhet * bøtteStørrelse stor. */
                    "b\u00F8tteSt\u00F8rrelse"?: number;
                    /** @description For hvilke behandlingstyper. Tom liste betyr alle. */
                    behandlingstyper?: PathsBehandlingerFordelingPneBehandlingerGetParametersQueryBehandlingstyper[];
                    /** @description For hvilke enheter. Tom liste betyr alle. */
                    enheter?: string[];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.statistikk.api.Fordeling\u00C5pneBehandlinger"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/behandlinger/fordeling-lukkede-behandlinger": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returnerer en liste over behandlingstiden på lukkede behandlinger. Bøtte nr 1 teller antall
         *     behandlinger som er enhet * bøtteStørrelse gammel . Bøtte nr antallBøtter + 1 teller
         *     antall behandlinger eldre enn bøttestørrelsen. */
        get: {
            parameters: {
                query: {
                    /** @description Hvor mange bøtter skal åpne behandlinger plasseres i? */
                    "antallB\u00F8tter"?: number;
                    /** @description Week, month, day, etc. */
                    enhet: PathsBehandlingerFordelingLukkedeBehandlingerGetParametersQueryEnhet;
                    /** @description Hver bøtte er enhet * bøtteStørrelse stor. */
                    "b\u00F8tteSt\u00F8rrelse"?: number;
                    /** @description For hvilke behandlingstyper. Tom liste betyr alle. */
                    behandlingstyper?: PathsBehandlingerFordelingLukkedeBehandlingerGetParametersQueryBehandlingstyper[];
                    /** @description For hvilke enheter. Tom liste betyr alle. */
                    enheter?: string[];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.statistikk.api.FordelingLukkedeBehandlinger"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/behandlinger/utvikling": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    /** @description Hvor mange dager å lage fordeling på. */
                    antallDager: number;
                    /** @description For hvilke behandlingstyper. Tom liste betyr alle. */
                    behandlingstyper?: PathsBehandlingerUtviklingGetParametersQueryBehandlingstyper[];
                    /** @description For hvilke enheter. Tom liste betyr alle. */
                    enheter?: string[];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.statistikk.api.`ProduksjonsstyringApiKt$hentBehandlingstidPerDag$BehandlinEndringerPerDag`"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/behandlinger/p\u00E5-vent": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    /** @description For hvilke behandlingstyper. Tom liste betyr alle. */
                    behandlingstyper?: PathsBehandlingerPVentGetParametersQueryBehandlingstyper[];
                    /** @description For hvilke enheter. Tom liste betyr alle. */
                    enheter?: string[];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.statistikk.produksjonsstyring.Vente\u00E5rsakOgGjennomsnitt"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/behandlinger/\u00E5rsak-til-behandling": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    /** @description For hvilke behandlingstyper. Tom liste betyr alle. */
                    behandlingstyper?: PathsBehandlingerRsakTilBehandlingGetParametersQueryBehandlingstyper[];
                    /** @description For hvilke enheter. Tom liste betyr alle. */
                    enheter?: string[];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["no.nav.aap.statistikk.produksjonsstyring.BehandlingAarsakAntallGjennomsnitt"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
type webhooks = Record<string, never>;
interface components {
    schemas: {
        "no.nav.aap.behandlingsflyt.kontrakt.avklaringsbehov.Definisjon": {
            /** @enum {string} */
            kode: NoNavAapBehandlingsflytKontraktAvklaringsbehovDefinisjonKode;
            kreverToTrinn: boolean;
            kvalitetssikres: boolean;
            "l\u00F8sesAv": NoNavAapBehandlingsflytKontraktAvklaringsbehovDefinisjonLSesAv[];
            /** @enum {string} */
            "l\u00F8sesISteg": NoNavAapBehandlingsflytKontraktAvklaringsbehovDefinisjonLSesISteg;
            /** @enum {string} */
            type: NoNavAapBehandlingsflytKontraktAvklaringsbehovDefinisjonType;
            name: string;
        };
        "no.nav.aap.behandlingsflyt.kontrakt.hendelse.AvklaringsbehovHendelseDto": {
            avklaringsbehovDefinisjon: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.avklaringsbehov.Definisjon"];
            endringer: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.hendelse.EndringDTO"][];
            /** @enum {string} */
            status: NoNavAapBehandlingsflytKontraktHendelseAvklaringsbehovHendelseDtoStatus;
            /** @enum {string|null} */
            typeBrev?: NoNavAapBehandlingsflytKontraktHendelseAvklaringsbehovHendelseDtoTypeBrev;
        };
        "no.nav.aap.behandlingsflyt.kontrakt.hendelse.EndringDTO": {
            begrunnelse?: string | null;
            endretAv: string;
            /**
             * Format: date
             * @example 2025-04-01
             */
            frist?: string | null;
            /** @enum {string} */
            status: NoNavAapBehandlingsflytKontraktHendelseEndringDTOStatus;
            /**
             * Format: date-time
             * @example 2025-04-01T12:30:00
             */
            tidsstempel: string;
            "\u00E5rsakTilRetur": components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.hendelse.\u00C5rsakTilRetur"][];
            /** @enum {string|null} */
            "\u00E5rsakTilSattP\u00E5Vent"?: NoNavAapBehandlingsflytKontraktHendelseEndringDTORsakTilSattPVent;
        };
        "no.nav.aap.behandlingsflyt.kontrakt.hendelse.\u00C5rsakTilRetur": {
            /** @enum {string} */
            "\u00E5rsak": NoNavAapBehandlingsflytKontraktHendelseRsakTilReturRsak;
        };
        "no.nav.aap.behandlingsflyt.kontrakt.statistikk.AvsluttetBehandlingDTO": {
            beregningsGrunnlag?: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.statistikk.BeregningsgrunnlagDTO"];
            diagnoser?: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.statistikk.Diagnoser"];
            /** @enum {string|null} */
            resultat?: NoNavAapBehandlingsflytKontraktStatistikkAvsluttetBehandlingDTOResultat;
            rettighetstypePerioder: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.statistikk.RettighetstypePeriode"][];
            tilkjentYtelse: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.statistikk.TilkjentYtelseDTO"];
            "vilk\u00E5rsResultat": components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.statistikk.Vilk\u00E5rsResultatDTO"];
        };
        "no.nav.aap.behandlingsflyt.kontrakt.statistikk.BeregningsgrunnlagDTO": {
            grunnlag11_19dto?: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.statistikk.Grunnlag11_19DTO"];
            "grunnlagUf\u00F8re"?: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.statistikk.GrunnlagUf\u00F8reDTO"];
            grunnlagYrkesskade?: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.statistikk.GrunnlagYrkesskadeDTO"];
        };
        "no.nav.aap.behandlingsflyt.kontrakt.statistikk.Diagnoser": {
            bidiagnoser: string[];
            diagnosekode: string;
            kodeverk: string;
        };
        "no.nav.aap.behandlingsflyt.kontrakt.statistikk.Grunnlag11_19DTO": {
            er6GBegrenset: boolean;
            erGjennomsnitt: boolean;
            /** Format: double */
            grunnlaget: number;
            /** @description Key type: kotlin.String */
            inntekter: {
                [key: string]: number;
            };
        };
        "no.nav.aap.behandlingsflyt.kontrakt.statistikk.GrunnlagUf\u00F8reDTO": {
            grunnlag: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.statistikk.Grunnlag11_19DTO"];
            grunnlagYtterligereNedsatt: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.statistikk.Grunnlag11_19DTO"];
            grunnlaget: number;
            /** @enum {string} */
            type: NoNavAapBehandlingsflytKontraktStatistikkGrunnlagUfReDTOType;
            /** @description Key type: kotlin.String */
            "uf\u00F8reInntekterFraForeg\u00E5ende\u00C5r": {
                [key: string]: number;
            };
            /** Format: int32 */
            "uf\u00F8reYtterligereNedsattArbeidsevne\u00C5r": number;
            /** Format: int32 */
            "uf\u00F8regrad": number;
        };
        "no.nav.aap.behandlingsflyt.kontrakt.statistikk.GrunnlagYrkesskadeDTO": {
            andelSomIkkeSkyldesYrkesskade: number;
            andelSomSkyldesYrkesskade: number;
            /** Format: int32 */
            andelYrkesskade: number;
            "antatt\u00C5rligInntektYrkesskadeTidspunktet": number;
            /** Format: int32 */
            benyttetAndelForYrkesskade: number;
            beregningsgrunnlag: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.statistikk.BeregningsgrunnlagDTO"];
            grunnlagEtterYrkesskadeFordel: number;
            grunnlagForBeregningAvYrkesskadeandel: number;
            grunnlaget: number;
            "inkludererUf\u00F8re": boolean;
            /** Format: int32 */
            terskelverdiForYrkesskade: number;
            /** Format: int32 */
            yrkesskadeTidspunkt: number;
            yrkesskadeinntektIG: number;
        };
        "no.nav.aap.behandlingsflyt.kontrakt.statistikk.RettighetstypePeriode": {
            /**
             * Format: date
             * @example 2025-04-01
             */
            fraDato: string;
            /** @enum {string} */
            rettighetstype: NoNavAapBehandlingsflytKontraktStatistikkRettighetstypePeriodeRettighetstype;
            /**
             * Format: date
             * @example 2025-04-01
             */
            tilDato: string;
        };
        "no.nav.aap.behandlingsflyt.kontrakt.statistikk.StoppetBehandling": {
            avklaringsbehov: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.hendelse.AvklaringsbehovHendelseDto"][];
            avsluttetBehandling?: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.statistikk.AvsluttetBehandlingDTO"];
            /**
             * Format: date-time
             * @example 2025-04-01T12:30:00
             */
            behandlingOpprettetTidspunkt: string;
            /** Format: uuid */
            behandlingReferanse: string;
            /** @enum {string} */
            behandlingStatus: NoNavAapBehandlingsflytKontraktStatistikkStoppetBehandlingBehandlingStatus;
            /** @enum {string} */
            behandlingType: NoNavAapBehandlingsflytKontraktStatistikkStoppetBehandlingBehandlingType;
            /**
             * Format: date-time
             * @example 2025-04-01T12:30:00
             */
            hendelsesTidspunkt: string;
            ident: string;
            identerForSak: string[];
            /**
             * Format: date-time
             * @example 2025-04-01T12:30:00
             */
            mottattTid: string;
            /** Format: uuid */
            relatertBehandling?: string | null;
            /** @enum {string} */
            sakStatus: NoNavAapBehandlingsflytKontraktStatistikkStoppetBehandlingSakStatus;
            saksnummer: string;
            /** @enum {string} */
            soknadsFormat: NoNavAapBehandlingsflytKontraktStatistikkStoppetBehandlingSoknadsFormat;
            versjon: string;
            "\u00E5rsakTilBehandling": NoNavAapBehandlingsflytKontraktStatistikkStoppetBehandlingRsakTilBehandling[];
        };
        "no.nav.aap.behandlingsflyt.kontrakt.statistikk.TilkjentYtelseDTO": {
            perioder: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.statistikk.TilkjentYtelsePeriodeDTO"][];
        };
        "no.nav.aap.behandlingsflyt.kontrakt.statistikk.TilkjentYtelsePeriodeDTO": {
            /** Format: int32 */
            antallBarn: number;
            /** Format: double */
            barnetillegg: number;
            /** Format: double */
            barnetilleggSats: number;
            /** Format: double */
            dagsats: number;
            /**
             * Format: date
             * @example 2025-04-01
             */
            fraDato: string;
            /** Format: double */
            gradering: number;
            /** Format: double */
            redusertDagsats: number;
            /**
             * Format: date
             * @example 2025-04-01
             */
            tilDato: string;
        };
        "no.nav.aap.behandlingsflyt.kontrakt.statistikk.Vilk\u00E5rDTO": {
            perioder: components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.statistikk.Vilk\u00E5rsPeriodeDTO"][];
            /** @enum {string} */
            "vilk\u00E5rType": NoNavAapBehandlingsflytKontraktStatistikkVilkRDTOVilkRType;
        };
        "no.nav.aap.behandlingsflyt.kontrakt.statistikk.Vilk\u00E5rsPeriodeDTO": {
            "avslags\u00E5rsak"?: string | null;
            /**
             * Format: date
             * @example 2025-04-01
             */
            fraDato: string;
            "innvilgelses\u00E5rsak"?: string | null;
            manuellVurdering: boolean;
            /**
             * Format: date
             * @example 2025-04-01
             */
            tilDato: string;
            /** @enum {string} */
            utfall: NoNavAapBehandlingsflytKontraktStatistikkVilkRsPeriodeDTOUtfall;
        };
        "no.nav.aap.behandlingsflyt.kontrakt.statistikk.Vilk\u00E5rsResultatDTO": {
            /** @enum {string} */
            typeBehandling: NoNavAapBehandlingsflytKontraktStatistikkVilkRsResultatDTOTypeBehandling;
            "vilk\u00E5r": components["schemas"]["no.nav.aap.behandlingsflyt.kontrakt.statistikk.Vilk\u00E5rDTO"][];
        };
        "no.nav.aap.oppgave.OppgaveDto": {
            avklaringsbehovKode: string;
            /**
             * Format: date-time
             * @example 2025-04-01T12:30:00
             */
            behandlingOpprettet: string;
            /** Format: uuid */
            behandlingRef?: string | null;
            /** @enum {string} */
            behandlingstype: NoNavAapOppgaveOppgaveDtoBehandlingstype;
            endretAv?: string | null;
            /**
             * Format: date-time
             * @example 2025-04-01T12:30:00
             */
            endretTidspunkt?: string | null;
            enhet: string;
            harFortroligAdresse?: boolean | null;
            /** Format: int64 */
            id?: number | null;
            /** Format: int64 */
            journalpostId?: number | null;
            "oppf\u00F8lgingsenhet"?: string | null;
            opprettetAv: string;
            /**
             * Format: date-time
             * @example 2025-04-01T12:30:00
             */
            opprettetTidspunkt: string;
            personIdent?: string | null;
            personNavn?: string | null;
            /**
             * Format: date
             * @example 2025-04-01
             */
            "p\u00E5VentTil"?: string | null;
            "p\u00E5Vent\u00C5rsak"?: string | null;
            reservertAv?: string | null;
            /**
             * Format: date-time
             * @example 2025-04-01T12:30:00
             */
            reservertTidspunkt?: string | null;
            returInformasjon?: components["schemas"]["no.nav.aap.oppgave.ReturInformasjon"];
            /** @enum {string|null} */
            returStatus?: NoNavAapOppgaveOppgaveDtoReturStatus;
            saksnummer?: string | null;
            /** @enum {string} */
            status: NoNavAapOppgaveOppgaveDtoStatus;
            veileder?: string | null;
            veilederArbeid?: string | null;
            veilederSykdom?: string | null;
            venteBegrunnelse?: string | null;
            /** Format: int64 */
            versjon: number;
            "\u00E5rsakerTilBehandling": string[];
        };
        "no.nav.aap.oppgave.ReturInformasjon": {
            begrunnelse: string;
            endretAv: string;
            /** @enum {string} */
            status: NoNavAapOppgaveReturInformasjonStatus;
            "\u00E5rsaker": NoNavAapOppgaveReturInformasjonRsaker[];
        };
        "no.nav.aap.oppgave.statistikk.OppgaveHendelse": {
            /** @enum {string} */
            hendelse: NoNavAapOppgaveStatistikkOppgaveHendelseHendelse;
            oppgaveDto: components["schemas"]["no.nav.aap.oppgave.OppgaveDto"];
        };
        "no.nav.aap.postmottak.kontrakt.avklaringsbehov.Definisjon": {
            /** @enum {string} */
            kode: NoNavAapPostmottakKontraktAvklaringsbehovDefinisjonKode;
            kreverToTrinn: boolean;
            "l\u00F8sesAv": NoNavAapPostmottakKontraktAvklaringsbehovDefinisjonLSesAv[];
            /** @enum {string} */
            "l\u00F8sesISteg": NoNavAapPostmottakKontraktAvklaringsbehovDefinisjonLSesISteg;
            /** @enum {string} */
            type: NoNavAapPostmottakKontraktAvklaringsbehovDefinisjonType;
            name: string;
        };
        "no.nav.aap.postmottak.kontrakt.hendelse.AvklaringsbehovHendelseDto": {
            avklaringsbehovDefinisjon: components["schemas"]["no.nav.aap.postmottak.kontrakt.avklaringsbehov.Definisjon"];
            endringer: components["schemas"]["no.nav.aap.postmottak.kontrakt.hendelse.EndringDTO"][];
            /** @enum {string} */
            status: NoNavAapPostmottakKontraktHendelseAvklaringsbehovHendelseDtoStatus;
        };
        "no.nav.aap.postmottak.kontrakt.hendelse.DokumentflytStoppetHendelse": {
            avklaringsbehov: components["schemas"]["no.nav.aap.postmottak.kontrakt.hendelse.AvklaringsbehovHendelseDto"][];
            /** @enum {string} */
            behandlingType: NoNavAapPostmottakKontraktHendelseDokumentflytStoppetHendelseBehandlingType;
            /**
             * Format: date-time
             * @example 2025-04-01T12:30:00
             */
            hendelsesTidspunkt: string;
            ident: string;
            journalpostId: components["schemas"]["no.nav.aap.postmottak.kontrakt.journalpost.JournalpostId"];
            /**
             * Format: date-time
             * @example 2025-04-01T12:30:00
             */
            opprettetTidspunkt: string;
            /** Format: uuid */
            referanse: string;
            saksnummer?: string | null;
            /** @enum {string} */
            status: NoNavAapPostmottakKontraktHendelseDokumentflytStoppetHendelseStatus;
        };
        "no.nav.aap.postmottak.kontrakt.hendelse.EndringDTO": {
            endretAv: string;
            /**
             * Format: date
             * @example 2025-04-01
             */
            frist?: string | null;
            /** @enum {string} */
            status: NoNavAapPostmottakKontraktHendelseEndringDTOStatus;
            /**
             * Format: date-time
             * @example 2025-04-01T12:30:00
             */
            tidsstempel: string;
            /** @enum {string|null} */
            "\u00E5rsakTilSattP\u00E5Vent"?: NoNavAapPostmottakKontraktHendelseEndringDTORsakTilSattPVent;
        };
        "no.nav.aap.postmottak.kontrakt.journalpost.JournalpostId": {
            /** Format: int64 */
            referanse: number;
        };
        "no.nav.aap.statistikk.api.FordelingLukkedeBehandlinger": {
            /** Format: int32 */
            antall: number;
            /** Format: int32 */
            "b\u00F8tte": number;
        };
        "no.nav.aap.statistikk.api.Fordeling\u00C5pneBehandlinger": {
            /** Format: int32 */
            antall: number;
            /** Format: int32 */
            "b\u00F8tte": number;
        };
        "no.nav.aap.statistikk.api.`ProduksjonsstyringApiKt$hentBehandlingstidPerDag$Antall\u00C5pneOgTypeOgGjennomsnittsalder`": {
            /** Format: int32 */
            "antall\u00C5pne": number;
            /** @enum {string} */
            behandlingstype: NoNavAapStatistikkApiProduksjonsstyringApiKt$hentBehandlingstidPerDag$AntallPneOgTypeOgGjennomsnittsalderBehandlingstype;
            /** Format: double */
            gjennomsnittsalder: number;
        };
        "no.nav.aap.statistikk.api.`ProduksjonsstyringApiKt$hentBehandlingstidPerDag$BehandlinEndringerPerDag`": {
            /** Format: int32 */
            avsluttede: number;
            /**
             * Format: date
             * @example 2025-04-01
             */
            dato: string;
            /** Format: int32 */
            nye: number;
            /** Format: int32 */
            totalt: number;
        };
        "no.nav.aap.statistikk.api.`ProduksjonsstyringApiKt$hentBehandlingstidPerDag$BehandlingstidPerDagDTO`": {
            /**
             * Format: date
             * @example 2025-04-01
             */
            dag: string;
            /** Format: double */
            snitt: number;
        };
        "no.nav.aap.statistikk.produksjonsstyring.BehandlingAarsakAntallGjennomsnitt": {
            /** Format: int32 */
            antall: number;
            /** Format: double */
            gjennomsnittligAlder: number;
            "\u00E5rsak": string;
        };
        "no.nav.aap.statistikk.produksjonsstyring.BehandlingPerAvklaringsbehov": {
            /** Format: int32 */
            antall: number;
            /** @description Avklaringsbehovkoden. */
            behov: string;
        };
        "no.nav.aap.statistikk.produksjonsstyring.BehandlingPerSteggruppe": {
            /** Format: int32 */
            antall: number;
            steggruppe: string;
        };
        "no.nav.aap.statistikk.produksjonsstyring.Vente\u00E5rsakOgGjennomsnitt": {
            /** Format: int32 */
            antall: number;
            /** Format: double */
            gjennomsnittligAlder: number;
            "\u00E5rsak": string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
type $defs = Record<string, never>;
declare enum PathsBehandlingstidGetParametersQueryBehandlingstyper {
    F_rstegangsbehandling = "F\u00F8rstegangsbehandling",
    Revurdering = "Revurdering",
    Tilbakekreving = "Tilbakekreving",
    Klage = "Klage",
    SvarFraAndreinstans = "SvarFraAndreinstans",
    Dokumenth_ndtering = "Dokumenth\u00E5ndtering",
    Journalf_ring = "Journalf\u00F8ring"
}
declare enum PathsBehandlingstidLukkedeSisteDagerAntallDagerGetParametersQueryBehandlingstyper {
    F_rstegangsbehandling = "F\u00F8rstegangsbehandling",
    Revurdering = "Revurdering",
    Tilbakekreving = "Tilbakekreving",
    Klage = "Klage",
    SvarFraAndreinstans = "SvarFraAndreinstans",
    Dokumenth_ndtering = "Dokumenth\u00E5ndtering",
    Journalf_ring = "Journalf\u00F8ring"
}
declare enum PathsPneBehandlingerPerBehandlingstypeGetParametersQueryBehandlingstyper {
    F_rstegangsbehandling = "F\u00F8rstegangsbehandling",
    Revurdering = "Revurdering",
    Tilbakekreving = "Tilbakekreving",
    Klage = "Klage",
    SvarFraAndreinstans = "SvarFraAndreinstans",
    Dokumenth_ndtering = "Dokumenth\u00E5ndtering",
    Journalf_ring = "Journalf\u00F8ring"
}
declare enum PathsBehandlingPerAvklaringsbehovGetParametersQueryBehandlingstyper {
    F_rstegangsbehandling = "F\u00F8rstegangsbehandling",
    Revurdering = "Revurdering",
    Tilbakekreving = "Tilbakekreving",
    Klage = "Klage",
    SvarFraAndreinstans = "SvarFraAndreinstans",
    Dokumenth_ndtering = "Dokumenth\u00E5ndtering",
    Journalf_ring = "Journalf\u00F8ring"
}
declare enum PathsBehandlingPerSteggruppeGetParametersQueryBehandlingstyper {
    F_rstegangsbehandling = "F\u00F8rstegangsbehandling",
    Revurdering = "Revurdering",
    Tilbakekreving = "Tilbakekreving",
    Klage = "Klage",
    SvarFraAndreinstans = "SvarFraAndreinstans",
    Dokumenth_ndtering = "Dokumenth\u00E5ndtering",
    Journalf_ring = "Journalf\u00F8ring"
}
declare enum PathsBehandlingerFordelingPneBehandlingerGetParametersQueryEnhet {
    DAG = "DAG",
    UKE = "UKE",
    M_NED = "M\u00C5NED",
    _R = "\u00C5R"
}
declare enum PathsBehandlingerFordelingPneBehandlingerGetParametersQueryBehandlingstyper {
    F_rstegangsbehandling = "F\u00F8rstegangsbehandling",
    Revurdering = "Revurdering",
    Tilbakekreving = "Tilbakekreving",
    Klage = "Klage",
    SvarFraAndreinstans = "SvarFraAndreinstans",
    Dokumenth_ndtering = "Dokumenth\u00E5ndtering",
    Journalf_ring = "Journalf\u00F8ring"
}
declare enum PathsBehandlingerFordelingLukkedeBehandlingerGetParametersQueryEnhet {
    DAG = "DAG",
    UKE = "UKE",
    M_NED = "M\u00C5NED",
    _R = "\u00C5R"
}
declare enum PathsBehandlingerFordelingLukkedeBehandlingerGetParametersQueryBehandlingstyper {
    F_rstegangsbehandling = "F\u00F8rstegangsbehandling",
    Revurdering = "Revurdering",
    Tilbakekreving = "Tilbakekreving",
    Klage = "Klage",
    SvarFraAndreinstans = "SvarFraAndreinstans",
    Dokumenth_ndtering = "Dokumenth\u00E5ndtering",
    Journalf_ring = "Journalf\u00F8ring"
}
declare enum PathsBehandlingerUtviklingGetParametersQueryBehandlingstyper {
    F_rstegangsbehandling = "F\u00F8rstegangsbehandling",
    Revurdering = "Revurdering",
    Tilbakekreving = "Tilbakekreving",
    Klage = "Klage",
    SvarFraAndreinstans = "SvarFraAndreinstans",
    Dokumenth_ndtering = "Dokumenth\u00E5ndtering",
    Journalf_ring = "Journalf\u00F8ring"
}
declare enum PathsBehandlingerPVentGetParametersQueryBehandlingstyper {
    F_rstegangsbehandling = "F\u00F8rstegangsbehandling",
    Revurdering = "Revurdering",
    Tilbakekreving = "Tilbakekreving",
    Klage = "Klage",
    SvarFraAndreinstans = "SvarFraAndreinstans",
    Dokumenth_ndtering = "Dokumenth\u00E5ndtering",
    Journalf_ring = "Journalf\u00F8ring"
}
declare enum PathsBehandlingerRsakTilBehandlingGetParametersQueryBehandlingstyper {
    F_rstegangsbehandling = "F\u00F8rstegangsbehandling",
    Revurdering = "Revurdering",
    Tilbakekreving = "Tilbakekreving",
    Klage = "Klage",
    SvarFraAndreinstans = "SvarFraAndreinstans",
    Dokumenth_ndtering = "Dokumenth\u00E5ndtering",
    Journalf_ring = "Journalf\u00F8ring"
}
declare enum NoNavAapBehandlingsflytKontraktAvklaringsbehovDefinisjonKode {
    Value9001 = "9001",
    Value9002 = "9002",
    Value9003 = "9003",
    Value9004 = "9004",
    Value5029 = "5029",
    Value5001 = "5001",
    Value5003 = "5003",
    Value5004 = "5004",
    Value5005 = "5005",
    Value5006 = "5006",
    Value5007 = "5007",
    Value5008 = "5008",
    Value5009 = "5009",
    Value5010 = "5010",
    Value5011 = "5011",
    Value5012 = "5012",
    Value5013 = "5013",
    Value5014 = "5014",
    Value5015 = "5015",
    Value5016 = "5016",
    Value5017 = "5017",
    Value5018 = "5018",
    Value5020 = "5020",
    Value5024 = "5024",
    Value5097 = "5097",
    Value5098 = "5098",
    Value5099 = "5099",
    Value5021 = "5021",
    Value5022 = "5022",
    Value5023 = "5023",
    Value5025 = "5025",
    Value5027 = "5027",
    Value5028 = "5028",
    Value5019 = "5019",
    Value5050 = "5050",
    Value5051 = "5051",
    Value5052 = "5052",
    Value5026 = "5026",
    Value5999 = "5999",
    Value5056 = "5056",
    Value6000 = "6000",
    Value6001 = "6001",
    Value6002 = "6002",
    Value6003 = "6003",
    Value6004 = "6004",
    Value6005 = "6005",
    Value6006 = "6006",
    Value6007 = "6007",
    Value6008 = "6008",
    Value6010 = "6010",
    Value7001 = "7001"
}
declare enum NoNavAapBehandlingsflytKontraktAvklaringsbehovDefinisjonLSesAv {
    SAKSBEHANDLER_OPPFOLGING = "SAKSBEHANDLER_OPPFOLGING",
    SAKSBEHANDLER_NASJONAL = "SAKSBEHANDLER_NASJONAL",
    KVALITETSSIKRER = "KVALITETSSIKRER",
    BESLUTTER = "BESLUTTER",
    LES = "LES",
    PRODUKSJONSSTYRING = "PRODUKSJONSSTYRING",
    DRIFT = "DRIFT"
}
declare enum NoNavAapBehandlingsflytKontraktAvklaringsbehovDefinisjonLSesISteg {
    START_BEHANDLING = "START_BEHANDLING",
    SEND_FORVALTNINGSMELDING = "SEND_FORVALTNINGSMELDING",
    VURDER_RETTIGHETSPERIODE = "VURDER_RETTIGHETSPERIODE",
    S_KNAD = "S\u00D8KNAD",
    VURDER_ALDER = "VURDER_ALDER",
    VURDER_LOVVALG = "VURDER_LOVVALG",
    VURDER_MEDLEMSKAP = "VURDER_MEDLEMSKAP",
    FASTSETT_MELDEPERIODER = "FASTSETT_MELDEPERIODER",
    AVKLAR_STUDENT = "AVKLAR_STUDENT",
    VURDER_BISTANDSBEHOV = "VURDER_BISTANDSBEHOV",
    VURDER_SYKEPENGEERSTATNING = "VURDER_SYKEPENGEERSTATNING",
    FASTSETT_SYKDOMSVILK_RET = "FASTSETT_SYKDOMSVILK\u00C5RET",
    VURDER_YRKESSKADE = "VURDER_YRKESSKADE",
    FRITAK_MELDEPLIKT = "FRITAK_MELDEPLIKT",
    KVALITETSSIKRING = "KVALITETSSIKRING",
    BARNETILLEGG = "BARNETILLEGG",
    AVKLAR_SYKDOM = "AVKLAR_SYKDOM",
    REFUSJON_KRAV = "REFUSJON_KRAV",
    FASTSETT_ARBEIDSEVNE = "FASTSETT_ARBEIDSEVNE",
    FASTSETT_BEREGNINGSTIDSPUNKT = "FASTSETT_BEREGNINGSTIDSPUNKT",
    FASTSETT_GRUNNLAG = "FASTSETT_GRUNNLAG",
    VIS_GRUNNLAG = "VIS_GRUNNLAG",
    MANGLENDE_LIGNING = "MANGLENDE_LIGNING",
    SAMORDNING_UF_RE = "SAMORDNING_UF\u00D8RE",
    SAMORDNING_GRADERING = "SAMORDNING_GRADERING",
    SAMORDNING_AVSLAG = "SAMORDNING_AVSLAG",
    SAMORDNING_ANDRE_STATLIGE_YTELSER = "SAMORDNING_ANDRE_STATLIGE_YTELSER",
    SAMORDNING_TJENESTEPENSJON_REFUSJONSKRAV = "SAMORDNING_TJENESTEPENSJON_REFUSJONSKRAV",
    FASTSETT_UTTAK = "FASTSETT_UTTAK",
    EFFEKTUER_11_7 = "EFFEKTUER_11_7",
    DU_ER_ET_ANNET_STED = "DU_ER_ET_ANNET_STED",
    BEREGN_TILKJENT_YTELSE = "BEREGN_TILKJENT_YTELSE",
    SIMULERING = "SIMULERING",
    FORESL__VEDTAK = "FORESL\u00C5_VEDTAK",
    FATTE_VEDTAK = "FATTE_VEDTAK",
    IVERKSETT_VEDTAK = "IVERKSETT_VEDTAK",
    OPPRETT_REVURDERING = "OPPRETT_REVURDERING",
    BREV = "BREV",
    P_KLAGET_BEHANDLING = "P\u00C5KLAGET_BEHANDLING",
    FORMKRAV = "FORMKRAV",
    BEHANDLENDE_ENHET = "BEHANDLENDE_ENHET",
    KLAGEBEHANDLING_KONTOR = "KLAGEBEHANDLING_KONTOR",
    KLAGEBEHANDLING_NAY = "KLAGEBEHANDLING_NAY",
    KLAGEBEHANDLING_OPPSUMMERING = "KLAGEBEHANDLING_OPPSUMMERING",
    OMGJ_RING = "OMGJ\u00D8RING",
    TREKK_KLAGE = "TREKK_KLAGE",
    OPPRETTHOLDELSE = "OPPRETTHOLDELSE",
    EFFEKTUER_AVVIST_P__FORMKRAV = "EFFEKTUER_AVVIST_P\u00C5_FORMKRAV",
    SVAR_FRA_ANDREINSTANS = "SVAR_FRA_ANDREINSTANS",
    IVERKSETT_KONSEKVENS = "IVERKSETT_KONSEKVENS",
    UDEFINERT = "UDEFINERT"
}
declare enum NoNavAapBehandlingsflytKontraktAvklaringsbehovDefinisjonType {
    MANUELT_P_KREVD = "MANUELT_P\u00C5KREVD",
    MANUELT_FRIVILLIG = "MANUELT_FRIVILLIG",
    BREV = "BREV",
    BREV_VENTEPUNKT = "BREV_VENTEPUNKT",
    VENTEPUNKT = "VENTEPUNKT",
    OVERSTYR = "OVERSTYR"
}
declare enum NoNavAapBehandlingsflytKontraktHendelseAvklaringsbehovHendelseDtoStatus {
    OPPRETTET = "OPPRETTET",
    AVSLUTTET = "AVSLUTTET",
    TOTRINNS_VURDERT = "TOTRINNS_VURDERT",
    SENDT_TILBAKE_FRA_BESLUTTER = "SENDT_TILBAKE_FRA_BESLUTTER",
    KVALITETSSIKRET = "KVALITETSSIKRET",
    SENDT_TILBAKE_FRA_KVALITETSSIKRER = "SENDT_TILBAKE_FRA_KVALITETSSIKRER",
    AVBRUTT = "AVBRUTT"
}
declare enum NoNavAapBehandlingsflytKontraktHendelseAvklaringsbehovHendelseDtoTypeBrev {
    VEDTAK_AVSLAG = "VEDTAK_AVSLAG",
    VEDTAK_INNVILGELSE = "VEDTAK_INNVILGELSE",
    VEDTAK_ENDRING = "VEDTAK_ENDRING",
    VARSEL_OM_BESTILLING = "VARSEL_OM_BESTILLING",
    FORH_NDSVARSEL_BRUDD_AKTIVITETSPLIKT = "FORH\u00C5NDSVARSEL_BRUDD_AKTIVITETSPLIKT",
    KLAGE_AVVIST = "KLAGE_AVVIST",
    KLAGE_OPPRETTHOLDELSE = "KLAGE_OPPRETTHOLDELSE",
    KLAGE_TRUKKET = "KLAGE_TRUKKET",
    FORH_NDSVARSEL_KLAGE_FORMKRAV = "FORH\u00C5NDSVARSEL_KLAGE_FORMKRAV",
    FORVALTNINGSMELDING = "FORVALTNINGSMELDING"
}
declare enum NoNavAapBehandlingsflytKontraktHendelseEndringDTOStatus {
    OPPRETTET = "OPPRETTET",
    AVSLUTTET = "AVSLUTTET",
    TOTRINNS_VURDERT = "TOTRINNS_VURDERT",
    SENDT_TILBAKE_FRA_BESLUTTER = "SENDT_TILBAKE_FRA_BESLUTTER",
    KVALITETSSIKRET = "KVALITETSSIKRET",
    SENDT_TILBAKE_FRA_KVALITETSSIKRER = "SENDT_TILBAKE_FRA_KVALITETSSIKRER",
    AVBRUTT = "AVBRUTT"
}
declare enum NoNavAapBehandlingsflytKontraktHendelseEndringDTORsakTilSattPVent {
    VENTER_P__OPPLYSNINGER = "VENTER_P\u00C5_OPPLYSNINGER",
    VENTER_P__OPPLYSNINGER_FRA_UTENLANDSKE_MYNDIGHETER = "VENTER_P\u00C5_OPPLYSNINGER_FRA_UTENLANDSKE_MYNDIGHETER",
    VENTER_P__MEDISINSKE_OPPLYSNINGER = "VENTER_P\u00C5_MEDISINSKE_OPPLYSNINGER",
    VENTER_P__VURDERING_AV_ROL = "VENTER_P\u00C5_VURDERING_AV_ROL",
    VENTER_P__SVAR_FRA_BRUKER = "VENTER_P\u00C5_SVAR_FRA_BRUKER",
    VENTER_P__MASKINELL_AVKLARING = "VENTER_P\u00C5_MASKINELL_AVKLARING",
    VENTER_P__UTENLANDSK_VIDEREFORING_AVKLARING = "VENTER_P\u00C5_UTENLANDSK_VIDEREFORING_AVKLARING",
    VENTER_P__KLAGE_IMPLEMENTASJON = "VENTER_P\u00C5_KLAGE_IMPLEMENTASJON",
    VENTER_P__SVAR_P__FORH_NDSVARSEL = "VENTER_P\u00C5_SVAR_P\u00C5_FORH\u00C5NDSVARSEL",
    VENTER_P__FUNKSJONALITET = "VENTER_P\u00C5_FUNKSJONALITET"
}
declare enum NoNavAapBehandlingsflytKontraktHendelseRsakTilReturRsak {
    MANGELFULL_BEGRUNNELSE = "MANGELFULL_BEGRUNNELSE",
    MANGLENDE_UTREDNING = "MANGLENDE_UTREDNING",
    FEIL_LOVANVENDELSE = "FEIL_LOVANVENDELSE",
    ANNET = "ANNET"
}
declare enum NoNavAapBehandlingsflytKontraktStatistikkAvsluttetBehandlingDTOResultat {
    INNVILGET = "INNVILGET",
    AVSLAG = "AVSLAG",
    TRUKKET = "TRUKKET"
}
declare enum NoNavAapBehandlingsflytKontraktStatistikkGrunnlagUfReDTOType {
    STANDARD = "STANDARD",
    YTTERLIGERE_NEDSATT = "YTTERLIGERE_NEDSATT"
}
declare enum NoNavAapBehandlingsflytKontraktStatistikkRettighetstypePeriodeRettighetstype {
    BISTANDSBEHOV = "BISTANDSBEHOV",
    SYKEPENGEERSTATNING = "SYKEPENGEERSTATNING",
    STUDENT = "STUDENT",
    ARBEIDSS_KER = "ARBEIDSS\u00D8KER",
    VURDERES_FOR_UF_RETRYGD = "VURDERES_FOR_UF\u00D8RETRYGD"
}
declare enum NoNavAapBehandlingsflytKontraktStatistikkStoppetBehandlingBehandlingStatus {
    OPPRETTET = "OPPRETTET",
    UTREDES = "UTREDES",
    IVERKSETTES = "IVERKSETTES",
    AVSLUTTET = "AVSLUTTET"
}
declare enum NoNavAapBehandlingsflytKontraktStatistikkStoppetBehandlingBehandlingType {
    F_rstegangsbehandling = "F\u00F8rstegangsbehandling",
    Revurdering = "Revurdering",
    Tilbakekreving = "Tilbakekreving",
    Klage = "Klage",
    SvarFraAndreinstans = "SvarFraAndreinstans"
}
declare enum NoNavAapBehandlingsflytKontraktStatistikkStoppetBehandlingSakStatus {
    OPPRETTET = "OPPRETTET",
    UTREDES = "UTREDES",
    L_PENDE = "L\u00D8PENDE",
    AVSLUTTET = "AVSLUTTET"
}
declare enum NoNavAapBehandlingsflytKontraktStatistikkStoppetBehandlingSoknadsFormat {
    DIGITAL = "DIGITAL",
    PAPIR = "PAPIR"
}
declare enum NoNavAapBehandlingsflytKontraktStatistikkStoppetBehandlingRsakTilBehandling {
    S_KNAD = "S\u00D8KNAD",
    AKTIVITETSMELDING = "AKTIVITETSMELDING",
    MELDEKORT = "MELDEKORT",
    LEGEERKL_RING = "LEGEERKL\u00C6RING",
    AVVIST_LEGEERKL_RING = "AVVIST_LEGEERKL\u00C6RING",
    DIALOGMELDING = "DIALOGMELDING",
    G_REGULERING = "G_REGULERING",
    REVURDER_MEDLEMSKAP = "REVURDER_MEDLEMSKAP",
    REVURDER_YRKESSKADE = "REVURDER_YRKESSKADE",
    REVURDER_BEREGNING = "REVURDER_BEREGNING",
    REVURDER_LOVVALG = "REVURDER_LOVVALG",
    REVURDER_SAMORDNING = "REVURDER_SAMORDNING",
    KLAGE = "KLAGE",
    LOVVALG_OG_MEDLEMSKAP = "LOVVALG_OG_MEDLEMSKAP",
    FORUTGAENDE_MEDLEMSKAP = "FORUTGAENDE_MEDLEMSKAP",
    SYKDOM_ARBEVNE_BEHOV_FOR_BISTAND = "SYKDOM_ARBEVNE_BEHOV_FOR_BISTAND",
    BARNETILLEGG = "BARNETILLEGG",
    INSTITUSJONSOPPHOLD = "INSTITUSJONSOPPHOLD",
    SAMORDNING_OG_AVREGNING = "SAMORDNING_OG_AVREGNING",
    REFUSJONSKRAV = "REFUSJONSKRAV",
    UTENLANDSOPPHOLD_FOR_SOKNADSTIDSPUNKT = "UTENLANDSOPPHOLD_FOR_SOKNADSTIDSPUNKT",
    VURDER_RETTIGHETSPERIODE = "VURDER_RETTIGHETSPERIODE",
    S_KNAD_TRUKKET = "S\u00D8KNAD_TRUKKET",
    FRITAK_MELDEPLIKT = "FRITAK_MELDEPLIKT",
    KLAGE_TRUKKET = "KLAGE_TRUKKET",
    REVURDER_MANUELL_INNTEKT = "REVURDER_MANUELL_INNTEKT",
    MOTTATT_KABAL_HENDELSE = "MOTTATT_KABAL_HENDELSE"
}
declare enum NoNavAapBehandlingsflytKontraktStatistikkVilkRDTOVilkRType {
    ALDERSVILK_RET = "ALDERSVILK\u00C5RET",
    SYKDOMSVILK_RET = "SYKDOMSVILK\u00C5RET",
    BISTANDSVILK_RET = "BISTANDSVILK\u00C5RET",
    MEDLEMSKAP = "MEDLEMSKAP",
    LOVVALG = "LOVVALG",
    GRUNNLAGET = "GRUNNLAGET",
    SYKEPENGEERSTATNING = "SYKEPENGEERSTATNING",
    SAMORDNING = "SAMORDNING"
}
declare enum NoNavAapBehandlingsflytKontraktStatistikkVilkRsPeriodeDTOUtfall {
    IKKE_VURDERT = "IKKE_VURDERT",
    IKKE_RELEVANT = "IKKE_RELEVANT",
    OPPFYLT = "OPPFYLT",
    IKKE_OPPFYLT = "IKKE_OPPFYLT"
}
declare enum NoNavAapBehandlingsflytKontraktStatistikkVilkRsResultatDTOTypeBehandling {
    F_rstegangsbehandling = "F\u00F8rstegangsbehandling",
    Revurdering = "Revurdering",
    Tilbakekreving = "Tilbakekreving",
    Klage = "Klage",
    SvarFraAndreinstans = "SvarFraAndreinstans"
}
declare enum NoNavAapOppgaveOppgaveDtoBehandlingstype {
    F_RSTEGANGSBEHANDLING = "F\u00D8RSTEGANGSBEHANDLING",
    REVURDERING = "REVURDERING",
    TILBAKEKREVING = "TILBAKEKREVING",
    KLAGE = "KLAGE",
    SVAR_FRA_ANDREINSTANS = "SVAR_FRA_ANDREINSTANS",
    DOKUMENT_H_NDTERING = "DOKUMENT_H\u00C5NDTERING",
    JOURNALF_RING = "JOURNALF\u00D8RING"
}
declare enum NoNavAapOppgaveOppgaveDtoReturStatus {
    RETUR_FRA_BESLUTTER = "RETUR_FRA_BESLUTTER",
    RETUR_FRA_KVALITETSSIKRER = "RETUR_FRA_KVALITETSSIKRER"
}
declare enum NoNavAapOppgaveOppgaveDtoStatus {
    OPPRETTET = "OPPRETTET",
    AVSLUTTET = "AVSLUTTET"
}
declare enum NoNavAapOppgaveReturInformasjonStatus {
    RETUR_FRA_BESLUTTER = "RETUR_FRA_BESLUTTER",
    RETUR_FRA_KVALITETSSIKRER = "RETUR_FRA_KVALITETSSIKRER"
}
declare enum NoNavAapOppgaveReturInformasjonRsaker {
    MANGELFULL_BEGRUNNELSE = "MANGELFULL_BEGRUNNELSE",
    MANGLENDE_UTREDNING = "MANGLENDE_UTREDNING",
    FEIL_LOVANVENDELSE = "FEIL_LOVANVENDELSE",
    ANNET = "ANNET"
}
declare enum NoNavAapOppgaveStatistikkOppgaveHendelseHendelse {
    OPPRETTET = "OPPRETTET",
    GJEN_PNET = "GJEN\u00C5PNET",
    OPPDATERT = "OPPDATERT",
    RESERVERT = "RESERVERT",
    AVRESERVERT = "AVRESERVERT",
    LUKKET = "LUKKET"
}
declare enum NoNavAapPostmottakKontraktAvklaringsbehovDefinisjonKode {
    Value9001 = "9001",
    Value1337 = "1337",
    Value1338 = "1338",
    Value1339 = "1339",
    Value1340 = "1340",
    Value1341 = "1341"
}
declare enum NoNavAapPostmottakKontraktAvklaringsbehovDefinisjonLSesAv {
    SAKSBEHANDLER_OPPFOLGING = "SAKSBEHANDLER_OPPFOLGING",
    SAKSBEHANDLER_NASJONAL = "SAKSBEHANDLER_NASJONAL",
    KVALITETSSIKRER = "KVALITETSSIKRER",
    BESLUTTER = "BESLUTTER",
    LES = "LES",
    PRODUKSJONSSTYRING = "PRODUKSJONSSTYRING",
    DRIFT = "DRIFT"
}
declare enum NoNavAapPostmottakKontraktAvklaringsbehovDefinisjonLSesISteg {
    DIGITALISER_DOKUMENT = "DIGITALISER_DOKUMENT",
    START_BEHANDLING = "START_BEHANDLING",
    AVKLAR_TEMA = "AVKLAR_TEMA",
    SETT_FAGSAK = "SETT_FAGSAK",
    ENDELIG_JOURNALF_RING = "ENDELIG_JOURNALF\u00D8RING",
    OVERLEVER_TIL_FAGSYSTEM = "OVERLEVER_TIL_FAGSYSTEM",
    UDEFINERT = "UDEFINERT",
    AVKLAR_SAK = "AVKLAR_SAK",
    VIDERESEND = "VIDERESEND",
    IVERKSETTES = "IVERKSETTES"
}
declare enum NoNavAapPostmottakKontraktAvklaringsbehovDefinisjonType {
    MANUELT_P_KREVD = "MANUELT_P\u00C5KREVD",
    MANUELT_FRIVILLIG = "MANUELT_FRIVILLIG",
    VENTEPUNKT = "VENTEPUNKT"
}
declare enum NoNavAapPostmottakKontraktHendelseAvklaringsbehovHendelseDtoStatus {
    OPPRETTET = "OPPRETTET",
    AVSLUTTET = "AVSLUTTET",
    SENDT_TILBAKE_FRA_BESLUTTER = "SENDT_TILBAKE_FRA_BESLUTTER",
    SENDT_TILBAKE_FRA_KVALITETSSIKRER = "SENDT_TILBAKE_FRA_KVALITETSSIKRER",
    AVBRUTT = "AVBRUTT"
}
declare enum NoNavAapPostmottakKontraktHendelseDokumentflytStoppetHendelseBehandlingType {
    DokumentH_ndtering = "DokumentH\u00E5ndtering",
    Journalf_ring = "Journalf\u00F8ring"
}
declare enum NoNavAapPostmottakKontraktHendelseDokumentflytStoppetHendelseStatus {
    OPPRETTET = "OPPRETTET",
    UTREDES = "UTREDES",
    IVERKSETTES = "IVERKSETTES",
    AVSLUTTET = "AVSLUTTET"
}
declare enum NoNavAapPostmottakKontraktHendelseEndringDTOStatus {
    OPPRETTET = "OPPRETTET",
    AVSLUTTET = "AVSLUTTET",
    SENDT_TILBAKE_FRA_BESLUTTER = "SENDT_TILBAKE_FRA_BESLUTTER",
    SENDT_TILBAKE_FRA_KVALITETSSIKRER = "SENDT_TILBAKE_FRA_KVALITETSSIKRER",
    AVBRUTT = "AVBRUTT"
}
declare enum NoNavAapPostmottakKontraktHendelseEndringDTORsakTilSattPVent {
    VENTER_P__OPPLYSNINGER = "VENTER_P\u00C5_OPPLYSNINGER",
    VENTER_P__OPPLYSNINGER_FRA_UTENLANDSKE_MYNDIGHETER = "VENTER_P\u00C5_OPPLYSNINGER_FRA_UTENLANDSKE_MYNDIGHETER",
    VENTER_P__MEDISINSKE_OPPLYSNINGER = "VENTER_P\u00C5_MEDISINSKE_OPPLYSNINGER",
    VENTER_P__VURDERING_AV_ROL = "VENTER_P\u00C5_VURDERING_AV_ROL",
    VENTER_P__SVAR_FRA_BRUKER = "VENTER_P\u00C5_SVAR_FRA_BRUKER"
}
declare enum NoNavAapStatistikkApiProduksjonsstyringApiKt$hentBehandlingstidPerDag$AntallPneOgTypeOgGjennomsnittsalderBehandlingstype {
    F_rstegangsbehandling = "F\u00F8rstegangsbehandling",
    Revurdering = "Revurdering",
    Tilbakekreving = "Tilbakekreving",
    Klage = "Klage",
    SvarFraAndreinstans = "SvarFraAndreinstans",
    Dokumenth_ndtering = "Dokumenth\u00E5ndtering",
    Journalf_ring = "Journalf\u00F8ring"
}
type operations = Record<string, never>;

export { type $defs, NoNavAapBehandlingsflytKontraktAvklaringsbehovDefinisjonKode, NoNavAapBehandlingsflytKontraktAvklaringsbehovDefinisjonLSesAv, NoNavAapBehandlingsflytKontraktAvklaringsbehovDefinisjonLSesISteg, NoNavAapBehandlingsflytKontraktAvklaringsbehovDefinisjonType, NoNavAapBehandlingsflytKontraktHendelseAvklaringsbehovHendelseDtoStatus, NoNavAapBehandlingsflytKontraktHendelseAvklaringsbehovHendelseDtoTypeBrev, NoNavAapBehandlingsflytKontraktHendelseEndringDTORsakTilSattPVent, NoNavAapBehandlingsflytKontraktHendelseEndringDTOStatus, NoNavAapBehandlingsflytKontraktHendelseRsakTilReturRsak, NoNavAapBehandlingsflytKontraktStatistikkAvsluttetBehandlingDTOResultat, NoNavAapBehandlingsflytKontraktStatistikkGrunnlagUfReDTOType, NoNavAapBehandlingsflytKontraktStatistikkRettighetstypePeriodeRettighetstype, NoNavAapBehandlingsflytKontraktStatistikkStoppetBehandlingBehandlingStatus, NoNavAapBehandlingsflytKontraktStatistikkStoppetBehandlingBehandlingType, NoNavAapBehandlingsflytKontraktStatistikkStoppetBehandlingRsakTilBehandling, NoNavAapBehandlingsflytKontraktStatistikkStoppetBehandlingSakStatus, NoNavAapBehandlingsflytKontraktStatistikkStoppetBehandlingSoknadsFormat, NoNavAapBehandlingsflytKontraktStatistikkVilkRDTOVilkRType, NoNavAapBehandlingsflytKontraktStatistikkVilkRsPeriodeDTOUtfall, NoNavAapBehandlingsflytKontraktStatistikkVilkRsResultatDTOTypeBehandling, NoNavAapOppgaveOppgaveDtoBehandlingstype, NoNavAapOppgaveOppgaveDtoReturStatus, NoNavAapOppgaveOppgaveDtoStatus, NoNavAapOppgaveReturInformasjonRsaker, NoNavAapOppgaveReturInformasjonStatus, NoNavAapOppgaveStatistikkOppgaveHendelseHendelse, NoNavAapPostmottakKontraktAvklaringsbehovDefinisjonKode, NoNavAapPostmottakKontraktAvklaringsbehovDefinisjonLSesAv, NoNavAapPostmottakKontraktAvklaringsbehovDefinisjonLSesISteg, NoNavAapPostmottakKontraktAvklaringsbehovDefinisjonType, NoNavAapPostmottakKontraktHendelseAvklaringsbehovHendelseDtoStatus, NoNavAapPostmottakKontraktHendelseDokumentflytStoppetHendelseBehandlingType, NoNavAapPostmottakKontraktHendelseDokumentflytStoppetHendelseStatus, NoNavAapPostmottakKontraktHendelseEndringDTORsakTilSattPVent, NoNavAapPostmottakKontraktHendelseEndringDTOStatus, NoNavAapStatistikkApiProduksjonsstyringApiKt$hentBehandlingstidPerDag$AntallPneOgTypeOgGjennomsnittsalderBehandlingstype, PathsBehandlingPerAvklaringsbehovGetParametersQueryBehandlingstyper, PathsBehandlingPerSteggruppeGetParametersQueryBehandlingstyper, PathsBehandlingerFordelingLukkedeBehandlingerGetParametersQueryBehandlingstyper, PathsBehandlingerFordelingLukkedeBehandlingerGetParametersQueryEnhet, PathsBehandlingerFordelingPneBehandlingerGetParametersQueryBehandlingstyper, PathsBehandlingerFordelingPneBehandlingerGetParametersQueryEnhet, PathsBehandlingerPVentGetParametersQueryBehandlingstyper, PathsBehandlingerRsakTilBehandlingGetParametersQueryBehandlingstyper, PathsBehandlingerUtviklingGetParametersQueryBehandlingstyper, PathsBehandlingstidGetParametersQueryBehandlingstyper, PathsBehandlingstidLukkedeSisteDagerAntallDagerGetParametersQueryBehandlingstyper, PathsPneBehandlingerPerBehandlingstypeGetParametersQueryBehandlingstyper, type components, type operations, type paths, type webhooks };
